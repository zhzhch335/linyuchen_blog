{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/css-zen-garden.md","hash":"d8cf3989db1d0bb1e9489579cd0a90171d6b628d","modified":1666572457823},{"_id":"source/_posts/vup2022.md","hash":"42db7ce7aed6ed5645b3f417f24bc1d17ad17e5a","modified":1666571712775},{"_id":"source/_posts/intr-scoop.md","hash":"703b3072b6465f778b2c65a42ff0bf5e100e566b","modified":1666572579811},{"_id":"source/_posts/今天吃什么.md","hash":"6e78e680a5fd90941ecbbc9ead46c37ae92413c0","modified":1666572106447},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1666263955953},{"_id":"themes/butterfly/README.md","hash":"851d8e3e0ba8d9da305eb2f2ec63221296c04080","modified":1666263955953},{"_id":"themes/butterfly/README_CN.md","hash":"c03bd24e375f0f9bbc4238d0ee9bae7f4db2f032","modified":1666263955954},{"_id":"themes/butterfly/_config.yml","hash":"b1d580b2b8ddbbaf91a95c1d2342fa2a0e1f3d67","modified":1666574146754},{"_id":"themes/butterfly/package.json","hash":"fcf19a2e42a7684dc4cab3e9b28b5f893296dc3b","modified":1666263955988},{"_id":"themes/butterfly/plugins.yml","hash":"57ed4bc4e74dd8fcbdb330a35a0bd1a0fafebab1","modified":1666263955988},{"_id":"themes/butterfly/languages/default.yml","hash":"335731ef259a3cec2499a2d5b050025ff4bdc608","modified":1666263955955},{"_id":"themes/butterfly/languages/en.yml","hash":"a96ab1bbe74e99ca2e4d67da9d83f442eb9b73af","modified":1666263955955},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"4adf079fb0170e3a8de6ddbb0392d6d1120030c4","modified":1666263955955},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"dcb10d62249bb149af8ad78db3ee6e342c6d6be7","modified":1666263955956},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1666263955956},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1666263955956},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1666263955986},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1666263955988},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1666263955986},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1666263955987},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"e1043b8f149371d5a4ab0f1306eabc2988bed071","modified":1666263955952},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1666263955952},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1666263955952},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1666263955953},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1666263955953},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1666263955957},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"ddea99847fd41323f183cd0c9dae3174c586f5b3","modified":1666263955957},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1666263955957},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"1d0f1b84be352862046e780800d696e80ef1cdd1","modified":1666263955957},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"3d95525a6d809be2f2a1cd6b33d3b7ecc0457d62","modified":1666263955962},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1666263955964},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1666263955965},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1666263955966},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1666263955989},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"8e6f0677c190d44c64222054e2e7c065fc6c4802","modified":1666263955989},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"176332aa4d01728d0bd084e9b02c60167dc307dd","modified":1666263955989},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b3e05e3440b078f57391c113d6b0c8ecff112720","modified":1666263955989},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1666263955990},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1666263955990},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1666263955990},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1666263955990},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1666263955991},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1666263955991},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"db4f5971c27f49a4cb47d34729f4ddf9919d392b","modified":1666263955991},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"c445140fa16f19bf5fb617fa735504e7799d4d42","modified":1666263955992},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c07efb04120914363b8de2c276ac5783b82db776","modified":1666263955992},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"83bfb16ab8d440be04e1b1f889f6affa7ad65a67","modified":1666263955992},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1666263955993},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1666263955993},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1666263955993},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1666263955993},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1666263955994},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1666263955994},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1666263955994},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1666263955994},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1666263955994},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1666263955994},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1666263956008},{"_id":"themes/butterfly/source/css/var.styl","hash":"584ef7b18d5e677eb2e62f9b139097d3b714a993","modified":1666263956008},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1666263956009},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1666263956010},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1666263956009},{"_id":"themes/butterfly/source/js/main.js","hash":"0b673b89d24b78b8544cc0e048953e6dcba3e9bf","modified":1666263956011},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1666263956012},{"_id":"themes/butterfly/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1666263956012},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1666263955958},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1666263955958},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"8a3f9e674b44e6a92d4df22baca65d9d30007dc3","modified":1666263955958},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1666263955958},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1666263955959},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1666263955959},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1666263955959},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1666263955960},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1666263955960},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"6f489b24f06578440f18b629db56c810f00f8c3f","modified":1666263955960},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1666263955961},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1666263955961},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1666263955961},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1666263955961},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1666263955962},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1666263955962},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1666263955963},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"8b8e04d3d9462b3790ba17e5a865dab5a4740a73","modified":1666263955963},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1666263955964},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1666263955964},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e2eba0fcb8332cb333b2aff9c76664e40e2e1974","modified":1666263955964},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1666263955964},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1666263955965},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1666263955965},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1666263955966},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1666263955975},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1666263955980},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1666263955980},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"4e026840c915327e45331e63e4b7ef287e871204","modified":1666263955980},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d561d36229692e2c8a9ee45a7c24c0c2b3599170","modified":1666263955982},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1666263955983},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1666263955983},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1666263955983},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1666263955984},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1666263955983},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1666263955984},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1666263955984},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1666263955985},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1666263955985},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1666263955985},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1666263955985},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1666263955986},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1666263955986},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f562648de515abc873609bfe9b9f799c8cf42b72","modified":1666263955995},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1666263955995},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1666263955996},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1666263955998},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"af6e3357b8f6df18d0775b8352551c0f8ce38e55","modified":1666263955998},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1666263955998},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1666263955998},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1666263955999},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"612d2f8a53141b353078f2a3405d8d44a79d9558","modified":1666263955999},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1666263956000},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"9f880a6fa91784a4d3e9ffb0d4607e8a74d4d929","modified":1666263956000},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"844858ae87c7278996ce484c6b456db354c48764","modified":1666263955999},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1666263956000},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1666263956000},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1666263956001},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1666263956001},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"e02b52bdd337c0ed3c9d3a507d1011403c38881d","modified":1666263956001},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"5dabc3a5330cc28f0666d1cd8db0d67f553fd854","modified":1666263956002},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1666263956002},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1666263956002},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1666263956003},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1666263956003},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1666263956003},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1666263956003},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"6d2a841c7656fb28b1e15afe1d7dda56c424b7d7","modified":1666263956004},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1666263956004},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d1398399eb7f1cc004fbcefa18f56188cc8fec8c","modified":1666263956004},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1666263956005},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"45792c13c7c439d412b7dc597d74d24f3b598406","modified":1666263956005},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1666263956005},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1666263956005},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1666263956006},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1666263956006},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1666263956006},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1666263956006},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1666263956007},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1666263956007},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1666263956007},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1666263956008},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"d0d60008ef4ff74298ff062878766f194a2e4a70","modified":1666263956011},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"f72e002d56903a49c36174e77e42f88b8af8bd44","modified":1666263956012},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1666263955966},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1666263955967},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"dfbec0a99e38ebeac46931121b3a70b9a1e34b79","modified":1666263955967},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1666263955967},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1666263955967},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1666263955968},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1666263955968},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"6e5ccc9ea4346c71ad4cbf1e9f1cb83bb45e6f27","modified":1666263955968},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1666263955969},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1666263955969},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1666263955969},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"a5ddcf84ce8855c7801289270009e29c3a103150","modified":1666263955970},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1666263955969},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e657b87b721b6ef9149686630a205f4ebb7f2716","modified":1666263955970},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1666263955971},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"55f7c144e4ef7a7f317bcdab8044fd8f89bdd5d9","modified":1666263955971},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1666263955971},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"8c16214a610ff8087628f32d005a1b0aab3bb910","modified":1666263955972},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"c83f37e9618fbc03ecab25db54f14dbbf9e7ce10","modified":1666263955972},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1666263955972},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1666263955973},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"3df2f59c9552a1f2e6f0d50c4ae97e72c5392b59","modified":1666263955972},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1666263955973},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1666263955974},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1666263955974},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1666263955974},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1666263955974},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1666263955975},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e45152e4ebc3fb2462916be93f98d18f0574f2d3","modified":1666263955975},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1666263955976},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1666263955976},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"056756e43908519039b8bbd7a90f8c49d561eb52","modified":1666263955976},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1666263955976},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"77ac27a24b8347668c4df9d5c44c9461c69eaec9","modified":1666263955977},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1666263955978},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1666263955978},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1666263955978},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1666263955979},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1666263955979},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"63ef0b2a75cf26a94c5bcd885f3a1c144451b852","modified":1666263955979},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1666263955978},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1666263955981},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1666263955981},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1666263955981},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1666263955982},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1666263955981},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"b45fc15c3ae7db3a0fbce0d6da74a72a95ca8a2b","modified":1666263955982},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1666263955982},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1666263955996},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1666263955996},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1666263955997},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1666263955997},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1666263955997},{"_id":"source/_posts/今天吃什么/cover.jpg","hash":"218633b6f32f7bfe7ec3a6f3f56168aed2e1a410","modified":1657501838751},{"_id":"public/search.xml","hash":"d6aa0903077460b50428571924caaed407c0a907","modified":1666574724933},{"_id":"public/2022/今天吃什么-93376e64471e/index.html","hash":"7848c7595d07647f705394e2bba47ed8cce76a3a","modified":1666574724933},{"_id":"public/2022/css-zen-garden-4b256053ce90/index.html","hash":"f64eee8459e28f8acfc09169e6cb8d1eb9c0ceda","modified":1666574724933},{"_id":"public/2022/intr-scoop-73a218ccdefc/index.html","hash":"350e9a6b8dceb7b5acd5398590002837e5c3794b","modified":1666574724933},{"_id":"public/2022/vup2022-7f74d40bf176/index.html","hash":"30f42118a65476af3e8b417457567573e4a6e0f4","modified":1666574724933},{"_id":"public/archives/index.html","hash":"1946b12935ffc19f704383438ffac019c0a3932d","modified":1666574724933},{"_id":"public/archives/2022/index.html","hash":"93a230be1e8db9eb7fae459b3c428fbf6be0c62f","modified":1666574724933},{"_id":"public/archives/2022/07/index.html","hash":"9733bb5b3671512cdf68b4bda3118a45d0343938","modified":1666574724933},{"_id":"public/archives/2022/08/index.html","hash":"419dbe03c2af00cd22371aa06baf0f78117c8fed","modified":1666574724933},{"_id":"public/index.html","hash":"f7fbd05196a0a30fe966250f8c574027aacddcdd","modified":1666574724933},{"_id":"public/tags/前端/index.html","hash":"84f3ee3ec7e4aa4f10a692b2898ffd3522418722","modified":1666574724933},{"_id":"public/tags/CSS/index.html","hash":"98d1918c28ddaa5c7116fc9bd5594939ed71f40b","modified":1666574724933},{"_id":"public/tags/后端/index.html","hash":"5400a8fa46ba407f49fc730541b6798883416439","modified":1666574724933},{"_id":"public/tags/Nodejs/index.html","hash":"8e4846dfcff6c6ca596a6515e05e241589508e10","modified":1666574724933},{"_id":"public/tags/windows软件/index.html","hash":"9cadbe9500e4c50268de81a1f8a93d499e25e466","modified":1666574724933},{"_id":"public/tags/实用工具/index.html","hash":"2bd8e26694da9a4fcbbeca11ef7d7bd6afb2a095","modified":1666574724933},{"_id":"public/tags/地图/index.html","hash":"3be342d14105082d6b4a584084879e036a4d2082","modified":1666574724933},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1666574724933},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1666574724933},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1666574724933},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1666574724933},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1666574724933},{"_id":"public/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1666574724933},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1666574724933},{"_id":"public/css/index.css","hash":"6902d41f66fde348e599bfe22172a36d3897f420","modified":1666574724933},{"_id":"public/js/main.js","hash":"73d2624ed465e4cfb1ebb00b2c8a24f5fc29bb21","modified":1666574724933},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1666574724933},{"_id":"public/2022/今天吃什么-93376e64471e/cover.jpg","hash":"218633b6f32f7bfe7ec3a6f3f56168aed2e1a410","modified":1666574724933}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CSS禅境花园——我第一次领略到CSS的魔力","date":"2022-08-01T00:43:00.000Z","cover":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86f26bb0d1394adc8b943817fa351ea9~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp?","_content":"我的学生时代，刚开始起步学前端的时候，曾经对CSS不屑一顾，直到我发现了CSS禅境花园，我才知道CSS包含的巨大魔力……\n\n<!-- more -->\n\n# 开始\n相信每个刚开始接触前端的初学者都会听说过，一个前端项目由三部分组成：\n- HTML-网页的结构，可以理解为骨架\n- JavaScript-网页的交互，可以理解为动作和头脑\n- CSS-网页的样式-网页的外观，可以理解为外貌\n\n三者的共同作用下，将枯燥无味的代码构成了一个有血有肉的页面。\n\n然而在我一开始学习前端的时候，觉得CSS不过如此——无非就是改一改颜色，换一换位置而已，然而，在偶然的机遇下，看到了CSS禅境花园，让我真正领略了CSS的魔力。\n\n# 什么是CSS禅境花园\n你能想想下面的几个图都来自同一个网页吗：\n<p align=left>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cce81cea6634225be257324056a4afa~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be19bf529fdb4a6993d863be5d1debdd~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/04776bf901094be6adf8d9b41243a375~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66593ee3879442f983c71881adb4c1f8~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n</p>\n\n当然，准确地来说，是它们共同使用了同一个HTML文件，拥有着相同的DOM结构，但是通过CSS，他们呈现了截然不同的样貌，有的清新婉约、有的雍容华贵、有的淡雅秀丽、有的热情奔放，这就是CSS的魅力，这就是禅境花园。\n\nCSS禅境花园在2003年5月推出（那个时候CSS3还刚开始制定没几年），来自世界各地的平面设计师提供的样式用于更改同一个 HTML 文件的视觉呈现，从而产生数百种不同的设计。除了对外部 CSS 文件的引用之外，HTML文件本身永远不会改变。所有视觉差异都是CSS的成果。这个网站曾经被评为“Web标准化中最著名最鼓舞人心的项目之一”，“全世界数以万计的设计师因此学会并爱上了CSS”。\n\n时至今日，主站虽仍然存在，但作品列表（最终网站上收录了222个设计）的页面已经无法打开，但仍然可以通过修改主站地址后面的数字来欣赏每一个设计方案：<br>\nhttp://www.csszengarden.com/221/ (替换其中的221，注意100以内需要填0补位，比如第八个是008，第六十六个是066）<br>\n或者访问主站的中文页面：<br>\nhttp://www.csszengarden.com/tr/zh-cn/221/ (也是可以替换其中的221）<br>\n无论如何，也许你打开这个页面的时候，也会同20年前的设计师一样，收获一份对于CSS魔力的惊奇与感动：\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d148a02ccad84c0880cc75e4d609f930~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n# 代码分析&做一个自己的禅境花园\n从任意一个禅境花园的页面中，你都可以下载到它的HTML文件和示例文件。\n\nHTML文件的主要结构:\n```HTML\n<body>\n    <section class=\"intro\" id=\"zen-intro\">\n        ……\n    </section>\n    <div class=\"main supporting\" id=\"zen-supporting\" role=\"main\">\n        ……\n    </div>\n    <aside class=\"sidebar\" role=\"complementary\">\n    </aside>\n    <div class=\"extra1\" role=\"presentation\"></div>\n    <div class=\"extra2\" role=\"presentation\"></div>\n    <div class=\"extra3\" role=\"presentation\"></div>\n    <div class=\"extra4\" role=\"presentation\"></div>\n    <div class=\"extra5\" role=\"presentation\"></div>\n    <div class=\"extra6\" role=\"presentation\"></div>\n</body>\n```\n总共四部分，前面的zen-intro部分是最开始的禅境花园介绍：\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfa97407d43f43679c2e0290ede3c8f2~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n第二个部分zen-supporting是中间文章的主体部分，是一些关于禅境花园的解读：\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b78baafbfe240408fc6fefe9ed00da1~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n第三个部分sidebar则是展示了一些设计以及导航栏：\n\n<p align=center>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bc2b4dbc617466eb7bdd4478d69e944~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n以及最后一个部分预留了一些空白的DOM元素让你可以随心所欲自己放点东西。（不过官方文档实际上鼓励多使用伪类而并非这些额外的DOM）\n\n接下来试着修改修改CSS样式自己做一个禅境花园吧（虽然我不是设计师）：\n\n首先，加个页面背景：\n```css\nbody {\n\tmargin: 0;\n\tpadding: 0;\n\tbackground: url(https://img.tukuppt.com//ad_preview/00/11/91/5c9951f8de1f1.jpg!/fw/980);\n\tbackground-size: cover;\n}\n```\n\n将案例导航栏通过绝对定位独立出来：\n```css\n .sidebar {\n\ttop: 170px;\n\tmargin-left: 588px;\n\tposition: absolute;\n\ttext-align: right;\n\tfont-family: \"lucida grande\", verdana, tahoma, arial;\n\twidth: 198px;\n\tpadding: 0 12px;\n\tfont-size: x-small;\n\twidth: 174px;\n}\n```\n给各个三级标题加上图标：\n```css\n  .preamble h3, \n  .explanation h3, \n  .participation h3, \n  .benefits h3, \n  .requirements h3 {\n\tmargin: 8px 0 3px 0;\n\tpadding: 3px 0 0 0;\n\tfont-size: 17px;\n\tfont-weight: 500;\n\tbackground: url(piuma.gif) no-repeat top left;\n\ttext-indent: 33px;\n}\n```\n最后再利用预留的DOM元素来做个小彩蛋：\n```css\n.extra1 {\n\tposition: fixed;\n\tleft: 20px;\n\ttop: 150px;\n\tcolor: black;\n\twidth: 120px;\n\theight: 120px;\n}\n\n.extra1:hover {\n\tcolor: white;\n\tbackground: url(https://lenadesign.org/wp-content/uploads/2019/12/untitled7-1.gif?w=580);\n\tbackground-size: cover;\n}\n\n.extra1::after {\n\tcontent: \"Factastic CSS!\";\n\tposition: absolute;\n\ttop: -20px;\n}\n```\n让鼠标悬浮在文字上时出现一个CSS的动图：\n<p align=center>\n    <img width=\"150px\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a427245772445308d0d6943791f468b~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>\n\n大体上就是这样啦（缺少设计感，这玩意还是需要个设计师啊）：\n\n<p align=center>\n    <img width=\"500px\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d99d040494cb40af8ca694de426f5428~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>","source":"_posts/css-zen-garden.md","raw":"---\ntitle: CSS禅境花园——我第一次领略到CSS的魔力\ndate: 2022-08-01 08:43:00\ntags: [前端,CSS]\ncover: https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86f26bb0d1394adc8b943817fa351ea9~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp?\n---\n我的学生时代，刚开始起步学前端的时候，曾经对CSS不屑一顾，直到我发现了CSS禅境花园，我才知道CSS包含的巨大魔力……\n\n<!-- more -->\n\n# 开始\n相信每个刚开始接触前端的初学者都会听说过，一个前端项目由三部分组成：\n- HTML-网页的结构，可以理解为骨架\n- JavaScript-网页的交互，可以理解为动作和头脑\n- CSS-网页的样式-网页的外观，可以理解为外貌\n\n三者的共同作用下，将枯燥无味的代码构成了一个有血有肉的页面。\n\n然而在我一开始学习前端的时候，觉得CSS不过如此——无非就是改一改颜色，换一换位置而已，然而，在偶然的机遇下，看到了CSS禅境花园，让我真正领略了CSS的魔力。\n\n# 什么是CSS禅境花园\n你能想想下面的几个图都来自同一个网页吗：\n<p align=left>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cce81cea6634225be257324056a4afa~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be19bf529fdb4a6993d863be5d1debdd~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/04776bf901094be6adf8d9b41243a375~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66593ee3879442f983c71881adb4c1f8~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n</p>\n\n当然，准确地来说，是它们共同使用了同一个HTML文件，拥有着相同的DOM结构，但是通过CSS，他们呈现了截然不同的样貌，有的清新婉约、有的雍容华贵、有的淡雅秀丽、有的热情奔放，这就是CSS的魅力，这就是禅境花园。\n\nCSS禅境花园在2003年5月推出（那个时候CSS3还刚开始制定没几年），来自世界各地的平面设计师提供的样式用于更改同一个 HTML 文件的视觉呈现，从而产生数百种不同的设计。除了对外部 CSS 文件的引用之外，HTML文件本身永远不会改变。所有视觉差异都是CSS的成果。这个网站曾经被评为“Web标准化中最著名最鼓舞人心的项目之一”，“全世界数以万计的设计师因此学会并爱上了CSS”。\n\n时至今日，主站虽仍然存在，但作品列表（最终网站上收录了222个设计）的页面已经无法打开，但仍然可以通过修改主站地址后面的数字来欣赏每一个设计方案：<br>\nhttp://www.csszengarden.com/221/ (替换其中的221，注意100以内需要填0补位，比如第八个是008，第六十六个是066）<br>\n或者访问主站的中文页面：<br>\nhttp://www.csszengarden.com/tr/zh-cn/221/ (也是可以替换其中的221）<br>\n无论如何，也许你打开这个页面的时候，也会同20年前的设计师一样，收获一份对于CSS魔力的惊奇与感动：\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d148a02ccad84c0880cc75e4d609f930~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n# 代码分析&做一个自己的禅境花园\n从任意一个禅境花园的页面中，你都可以下载到它的HTML文件和示例文件。\n\nHTML文件的主要结构:\n```HTML\n<body>\n    <section class=\"intro\" id=\"zen-intro\">\n        ……\n    </section>\n    <div class=\"main supporting\" id=\"zen-supporting\" role=\"main\">\n        ……\n    </div>\n    <aside class=\"sidebar\" role=\"complementary\">\n    </aside>\n    <div class=\"extra1\" role=\"presentation\"></div>\n    <div class=\"extra2\" role=\"presentation\"></div>\n    <div class=\"extra3\" role=\"presentation\"></div>\n    <div class=\"extra4\" role=\"presentation\"></div>\n    <div class=\"extra5\" role=\"presentation\"></div>\n    <div class=\"extra6\" role=\"presentation\"></div>\n</body>\n```\n总共四部分，前面的zen-intro部分是最开始的禅境花园介绍：\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfa97407d43f43679c2e0290ede3c8f2~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n第二个部分zen-supporting是中间文章的主体部分，是一些关于禅境花园的解读：\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b78baafbfe240408fc6fefe9ed00da1~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n第三个部分sidebar则是展示了一些设计以及导航栏：\n\n<p align=center>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bc2b4dbc617466eb7bdd4478d69e944~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n以及最后一个部分预留了一些空白的DOM元素让你可以随心所欲自己放点东西。（不过官方文档实际上鼓励多使用伪类而并非这些额外的DOM）\n\n接下来试着修改修改CSS样式自己做一个禅境花园吧（虽然我不是设计师）：\n\n首先，加个页面背景：\n```css\nbody {\n\tmargin: 0;\n\tpadding: 0;\n\tbackground: url(https://img.tukuppt.com//ad_preview/00/11/91/5c9951f8de1f1.jpg!/fw/980);\n\tbackground-size: cover;\n}\n```\n\n将案例导航栏通过绝对定位独立出来：\n```css\n .sidebar {\n\ttop: 170px;\n\tmargin-left: 588px;\n\tposition: absolute;\n\ttext-align: right;\n\tfont-family: \"lucida grande\", verdana, tahoma, arial;\n\twidth: 198px;\n\tpadding: 0 12px;\n\tfont-size: x-small;\n\twidth: 174px;\n}\n```\n给各个三级标题加上图标：\n```css\n  .preamble h3, \n  .explanation h3, \n  .participation h3, \n  .benefits h3, \n  .requirements h3 {\n\tmargin: 8px 0 3px 0;\n\tpadding: 3px 0 0 0;\n\tfont-size: 17px;\n\tfont-weight: 500;\n\tbackground: url(piuma.gif) no-repeat top left;\n\ttext-indent: 33px;\n}\n```\n最后再利用预留的DOM元素来做个小彩蛋：\n```css\n.extra1 {\n\tposition: fixed;\n\tleft: 20px;\n\ttop: 150px;\n\tcolor: black;\n\twidth: 120px;\n\theight: 120px;\n}\n\n.extra1:hover {\n\tcolor: white;\n\tbackground: url(https://lenadesign.org/wp-content/uploads/2019/12/untitled7-1.gif?w=580);\n\tbackground-size: cover;\n}\n\n.extra1::after {\n\tcontent: \"Factastic CSS!\";\n\tposition: absolute;\n\ttop: -20px;\n}\n```\n让鼠标悬浮在文字上时出现一个CSS的动图：\n<p align=center>\n    <img width=\"150px\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a427245772445308d0d6943791f468b~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>\n\n大体上就是这样啦（缺少设计感，这玩意还是需要个设计师啊）：\n\n<p align=center>\n    <img width=\"500px\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d99d040494cb40af8ca694de426f5428~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>","slug":"css-zen-garden","published":1,"updated":"2022-10-24T00:47:37.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9m3k9rv0000dcwf91gb1jxa","content":"<p>我的学生时代，刚开始起步学前端的时候，曾经对CSS不屑一顾，直到我发现了CSS禅境花园，我才知道CSS包含的巨大魔力……</p>\n<span id=\"more\"></span>\n\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><p>相信每个刚开始接触前端的初学者都会听说过，一个前端项目由三部分组成：</p>\n<ul>\n<li>HTML-网页的结构，可以理解为骨架</li>\n<li>JavaScript-网页的交互，可以理解为动作和头脑</li>\n<li>CSS-网页的样式-网页的外观，可以理解为外貌</li>\n</ul>\n<p>三者的共同作用下，将枯燥无味的代码构成了一个有血有肉的页面。</p>\n<p>然而在我一开始学习前端的时候，觉得CSS不过如此——无非就是改一改颜色，换一换位置而已，然而，在偶然的机遇下，看到了CSS禅境花园，让我真正领略了CSS的魔力。</p>\n<h1 id=\"什么是CSS禅境花园\"><a href=\"#什么是CSS禅境花园\" class=\"headerlink\" title=\"什么是CSS禅境花园\"></a>什么是CSS禅境花园</h1><p>你能想想下面的几个图都来自同一个网页吗：</p>\n<p align=left>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cce81cea6634225be257324056a4afa~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be19bf529fdb4a6993d863be5d1debdd~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/04776bf901094be6adf8d9b41243a375~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66593ee3879442f983c71881adb4c1f8~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n</p>\n\n<p>当然，准确地来说，是它们共同使用了同一个HTML文件，拥有着相同的DOM结构，但是通过CSS，他们呈现了截然不同的样貌，有的清新婉约、有的雍容华贵、有的淡雅秀丽、有的热情奔放，这就是CSS的魅力，这就是禅境花园。</p>\n<p>CSS禅境花园在2003年5月推出（那个时候CSS3还刚开始制定没几年），来自世界各地的平面设计师提供的样式用于更改同一个 HTML 文件的视觉呈现，从而产生数百种不同的设计。除了对外部 CSS 文件的引用之外，HTML文件本身永远不会改变。所有视觉差异都是CSS的成果。这个网站曾经被评为“Web标准化中最著名最鼓舞人心的项目之一”，“全世界数以万计的设计师因此学会并爱上了CSS”。</p>\n<p>时至今日，主站虽仍然存在，但作品列表（最终网站上收录了222个设计）的页面已经无法打开，但仍然可以通过修改主站地址后面的数字来欣赏每一个设计方案：<br><br><a href=\"http://www.csszengarden.com/221/\">http://www.csszengarden.com/221/</a> (替换其中的221，注意100以内需要填0补位，比如第八个是008，第六十六个是066）<br><br>或者访问主站的中文页面：<br><br><a href=\"http://www.csszengarden.com/tr/zh-cn/221/\">http://www.csszengarden.com/tr/zh-cn/221/</a> (也是可以替换其中的221）<br><br>无论如何，也许你打开这个页面的时候，也会同20年前的设计师一样，收获一份对于CSS魔力的惊奇与感动：</p>\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d148a02ccad84c0880cc75e4d609f930~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<h1 id=\"代码分析-amp-做一个自己的禅境花园\"><a href=\"#代码分析-amp-做一个自己的禅境花园\" class=\"headerlink\" title=\"代码分析&amp;做一个自己的禅境花园\"></a>代码分析&amp;做一个自己的禅境花园</h1><p>从任意一个禅境花园的页面中，你都可以下载到它的HTML文件和示例文件。</p>\n<p>HTML文件的主要结构:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;intro&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;zen-intro&quot;</span>&gt;</span></span><br><span class=\"line\">        ……</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main supporting&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;zen-supporting&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">        ……</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aside</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;sidebar&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;complementary&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">aside</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra1&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra2&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra3&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra4&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra5&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra6&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>总共四部分，前面的zen-intro部分是最开始的禅境花园介绍：</p>\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfa97407d43f43679c2e0290ede3c8f2~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<p>第二个部分zen-supporting是中间文章的主体部分，是一些关于禅境花园的解读：</p>\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b78baafbfe240408fc6fefe9ed00da1~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<p>第三个部分sidebar则是展示了一些设计以及导航栏：</p>\n<p align=center>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bc2b4dbc617466eb7bdd4478d69e944~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<p>以及最后一个部分预留了一些空白的DOM元素让你可以随心所欲自己放点东西。（不过官方文档实际上鼓励多使用伪类而并非这些额外的DOM）</p>\n<p>接下来试着修改修改CSS样式自己做一个禅境花园吧（虽然我不是设计师）：</p>\n<p>首先，加个页面背景：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">https://img.tukuppt.com//ad_preview/00/11/91/5c9951f8de1f1.jpg!/fw/980</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将案例导航栏通过绝对定位独立出来：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">170px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">588px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: right;</span><br><span class=\"line\">\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;lucida grande&quot;</span>, verdana, tahoma, arial;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">198px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">12px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: x-small;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">174px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>给各个三级标题加上图标：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"selector-class\">.preamble</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.explanation</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.participation</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.benefits</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.requirements</span> <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">8px</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">17px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-weight</span>: <span class=\"number\">500</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">piuma.gif</span>) no-repeat top left;</span><br><span class=\"line\">\t<span class=\"attribute\">text-indent</span>: <span class=\"number\">33px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后再利用预留的DOM元素来做个小彩蛋：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.extra1</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.extra1</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">https://lenadesign.org/wp-content/uploads/2019/12/untitled7-1.gif?w=580</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.extra1</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">content</span>: <span class=\"string\">&quot;Factastic CSS!&quot;</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>让鼠标悬浮在文字上时出现一个CSS的动图：</p>\n<p align=center>\n    <img width=\"150px\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a427245772445308d0d6943791f468b~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>\n\n<p>大体上就是这样啦（缺少设计感，这玩意还是需要个设计师啊）：</p>\n<p align=center>\n    <img width=\"500px\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d99d040494cb40af8ca694de426f5428~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>","site":{"data":{}},"excerpt":"<p>我的学生时代，刚开始起步学前端的时候，曾经对CSS不屑一顾，直到我发现了CSS禅境花园，我才知道CSS包含的巨大魔力……</p>","more":"<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><p>相信每个刚开始接触前端的初学者都会听说过，一个前端项目由三部分组成：</p>\n<ul>\n<li>HTML-网页的结构，可以理解为骨架</li>\n<li>JavaScript-网页的交互，可以理解为动作和头脑</li>\n<li>CSS-网页的样式-网页的外观，可以理解为外貌</li>\n</ul>\n<p>三者的共同作用下，将枯燥无味的代码构成了一个有血有肉的页面。</p>\n<p>然而在我一开始学习前端的时候，觉得CSS不过如此——无非就是改一改颜色，换一换位置而已，然而，在偶然的机遇下，看到了CSS禅境花园，让我真正领略了CSS的魔力。</p>\n<h1 id=\"什么是CSS禅境花园\"><a href=\"#什么是CSS禅境花园\" class=\"headerlink\" title=\"什么是CSS禅境花园\"></a>什么是CSS禅境花园</h1><p>你能想想下面的几个图都来自同一个网页吗：</p>\n<p align=left>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cce81cea6634225be257324056a4afa~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be19bf529fdb4a6993d863be5d1debdd~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/04776bf901094be6adf8d9b41243a375~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66593ee3879442f983c71881adb4c1f8~tplv-k3u1fbpfcp-watermark.image?\" width=\"350px\" />\n</p>\n\n<p>当然，准确地来说，是它们共同使用了同一个HTML文件，拥有着相同的DOM结构，但是通过CSS，他们呈现了截然不同的样貌，有的清新婉约、有的雍容华贵、有的淡雅秀丽、有的热情奔放，这就是CSS的魅力，这就是禅境花园。</p>\n<p>CSS禅境花园在2003年5月推出（那个时候CSS3还刚开始制定没几年），来自世界各地的平面设计师提供的样式用于更改同一个 HTML 文件的视觉呈现，从而产生数百种不同的设计。除了对外部 CSS 文件的引用之外，HTML文件本身永远不会改变。所有视觉差异都是CSS的成果。这个网站曾经被评为“Web标准化中最著名最鼓舞人心的项目之一”，“全世界数以万计的设计师因此学会并爱上了CSS”。</p>\n<p>时至今日，主站虽仍然存在，但作品列表（最终网站上收录了222个设计）的页面已经无法打开，但仍然可以通过修改主站地址后面的数字来欣赏每一个设计方案：<br><br><a href=\"http://www.csszengarden.com/221/\">http://www.csszengarden.com/221/</a> (替换其中的221，注意100以内需要填0补位，比如第八个是008，第六十六个是066）<br><br>或者访问主站的中文页面：<br><br><a href=\"http://www.csszengarden.com/tr/zh-cn/221/\">http://www.csszengarden.com/tr/zh-cn/221/</a> (也是可以替换其中的221）<br><br>无论如何，也许你打开这个页面的时候，也会同20年前的设计师一样，收获一份对于CSS魔力的惊奇与感动：</p>\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d148a02ccad84c0880cc75e4d609f930~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<h1 id=\"代码分析-amp-做一个自己的禅境花园\"><a href=\"#代码分析-amp-做一个自己的禅境花园\" class=\"headerlink\" title=\"代码分析&amp;做一个自己的禅境花园\"></a>代码分析&amp;做一个自己的禅境花园</h1><p>从任意一个禅境花园的页面中，你都可以下载到它的HTML文件和示例文件。</p>\n<p>HTML文件的主要结构:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;intro&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;zen-intro&quot;</span>&gt;</span></span><br><span class=\"line\">        ……</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;main supporting&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;zen-supporting&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;main&quot;</span>&gt;</span></span><br><span class=\"line\">        ……</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aside</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;sidebar&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;complementary&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">aside</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra1&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra2&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra3&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra4&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra5&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;extra6&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;presentation&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>总共四部分，前面的zen-intro部分是最开始的禅境花园介绍：</p>\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfa97407d43f43679c2e0290ede3c8f2~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<p>第二个部分zen-supporting是中间文章的主体部分，是一些关于禅境花园的解读：</p>\n<p align=center>\n    <img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b78baafbfe240408fc6fefe9ed00da1~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<p>第三个部分sidebar则是展示了一些设计以及导航栏：</p>\n<p align=center>\n    <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bc2b4dbc617466eb7bdd4478d69e944~tplv-k3u1fbpfcp-watermark.image?\" width=\"800px\" />\n</p>\n\n<p>以及最后一个部分预留了一些空白的DOM元素让你可以随心所欲自己放点东西。（不过官方文档实际上鼓励多使用伪类而并非这些额外的DOM）</p>\n<p>接下来试着修改修改CSS样式自己做一个禅境花园吧（虽然我不是设计师）：</p>\n<p>首先，加个页面背景：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">https://img.tukuppt.com//ad_preview/00/11/91/5c9951f8de1f1.jpg!/fw/980</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将案例导航栏通过绝对定位独立出来：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">170px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">588px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: right;</span><br><span class=\"line\">\t<span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;lucida grande&quot;</span>, verdana, tahoma, arial;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">198px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">12px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: x-small;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">174px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>给各个三级标题加上图标：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"selector-class\">.preamble</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.explanation</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.participation</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.benefits</span> <span class=\"selector-tag\">h3</span>, </span><br><span class=\"line\">  <span class=\"selector-class\">.requirements</span> <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">8px</span> <span class=\"number\">0</span> <span class=\"number\">3px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">17px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">font-weight</span>: <span class=\"number\">500</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">piuma.gif</span>) no-repeat top left;</span><br><span class=\"line\">\t<span class=\"attribute\">text-indent</span>: <span class=\"number\">33px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后再利用预留的DOM元素来做个小彩蛋：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.extra1</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.extra1</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">https://lenadesign.org/wp-content/uploads/2019/12/untitled7-1.gif?w=580</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.extra1</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">content</span>: <span class=\"string\">&quot;Factastic CSS!&quot;</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>让鼠标悬浮在文字上时出现一个CSS的动图：</p>\n<p align=center>\n    <img width=\"150px\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a427245772445308d0d6943791f468b~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>\n\n<p>大体上就是这样啦（缺少设计感，这玩意还是需要个设计师啊）：</p>\n<p align=center>\n    <img width=\"500px\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d99d040494cb40af8ca694de426f5428~tplv-k3u1fbpfcp-watermark.image?\"/>\n</p>"},{"title":"2022年，我用技术来D虚拟主播","date":"2022-07-26T08:06:15.000Z","cover":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b3e2dfc8deb4662a73601de3c39fcac~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp?","_content":"\n2022年上半年，作为一个前端程序员，我为虚拟主播做了三件事：制作生日纪念网页、开发舰长群机器人、为主播的视频投稿建立备份数据库\n<!-- more -->\n# 写在前面\n为了避免各位观众老爷看到这些摸棱两可的名词不懂而直接跑掉，我先说下这半年里我都做了啥：\n- 部署了一个静态页面用作生日礼物\n- 开发了一个QQ机器人来发布消息和互动\n- 使用nodejs自动缓存up主的视频，并且建立了数据库部署了后台\n\n所用到的技术&做的工作：\n- 使用nodejs开发的千图成像程序\n- 域名备案\n- 静态网页托管\n- 基于Mirai的QQ机器人开发\n- nodejs的b站视频监听和下载\n- 使用nodejs操作mongodb\n- 基于express的后台程序\n- 腾讯云托管（篇幅有限没展开说）\n- 七牛云OSS的API上传及外链配置<br>\n\n这篇文章只是讲讲我几个项目的**思路和历程**，具体的技术细节就暂时不说啦。\n\n# 名词解释&背景\n以下是大家可能听不太懂的“专业名词”：\n- **虚拟主播**：也称vtuber、vup，是指真人不出镜，而是通过面部捕捉、动作捕捉等技术将虚拟人物画面呈现在屏幕上来进行视频制作和直播的网络主播\n- **DD**：中文对应弟弟，指虚拟主播的粉丝，词义相较于“粉丝”程度更深，即更加狂热，在部分场景下略有贬义\n- **D**：DD的动词化，指喜爱和推崇某个虚拟主播\n- **舰长**：某直播平台的礼物增值服务，价格从一百到两万不等，一般购买舰长的粉丝可以被认为是主播的核心粉丝群体，在一些互动中会有一些特权或者能掌握到一手的消息\n- **开团**：针对热点敏感事件，清晰而立场坚定地表达自己的态度和观点，由于在互联网上很容易引起各方的“战争”，类似于MOBA游戏中团战的发起者，因此称之为开团\n\n2022年，从卷城杭州回到了老家，在一个本地电商平台做了前端工作，虽然依然还是要加班，但是在项目和项目的间隙，还是有很多喘息的机会，于是便有机会开始琢磨一些技术方面的问题，其中让我比较感兴趣的有三个方面：\n- 静态网页的部署\n- QQ机器人\n- 后端及数据库\n\n而学习一项新的技术，做项目再合适不过了，恰逢这段时间迷上了虚拟主播，成为了臭DD，于是将这三个技术方面进行了项目的转化，分别是：\n- 为虚拟主播制作的生日纪念网页（域名备案、静态页面部署）\n- 专为虚拟主播打造的QQ机器人“鱼子酱”（这个是与其他人合作的，用Python开发）\n- 虚拟主播视频投稿数据库（mongoDB，express，nodejs）\n\n\n# 为虚拟主播制作的生日纪念网页\n虚拟主播会在生日当天举行生日特别直播，部分主播会在生日前征集一些创意投稿，但投稿无非是视频剪辑、绘画、音乐之类的，于是我另辟蹊径——做个交互网页吧，毕竟前端是我的老本行，于是我制作了一个由多幅绘画拼接成的主播头像的马赛克大图，效果如下：\n\n<p align=center><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7dc72c94738e44beaa5a8f21607080ec~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\" /></p>\n\n这个马赛克拼图的算法也是我用Nodejs来写的，这个回头单开一篇文章说。<br>\n静态网页写好了之后，要怎么给主播看呢，放在自己的服务器上，把IP地址发给主播？自然不是好主意，万一服务器到期了呢，而且似乎还有我不知道的安全性问题，也缺少cdn可能会导致加载缓慢。于是，**域名+静态网站托管**的方案便成为了我的选择。<br>\n首先，购买一个域名虽然不贵，但是在中国大陆部署的服务，需要进行备案。<br>\n简单说下，备案的过程基本上经历了**实名认证**-**提交照片和材料**-**平台预审**-**工信部审核**几个过程，时间比较长但是并不麻烦。（想起来十年前备案的时候还要把幕布寄来寄去来着）<br>\n关于备案的几个小要点：\n- 人脸认证的时候穿上衣服~\n- 网站用途不要有送给别人的礼物之类的字样，要说明网站是自己的\n- 平台预审和工信部审核阶段都可能有电话打过来，记得注意电话\n\n接下来，便是网站的托管服务，我选择了腾讯云云开发里的静态网站托管服务，虽然是第一次用，但是整体使用起来没什么难度，基本就是这几个步骤：\n- 把自己打包好的静态页面文件上传\n- 在设置中配置好自己的域名\n- 在DNS中设置好托管服务提供的CNAME记录<br>\n\n在主播生日那几天访问量有点大，买了20块钱流量包几十个G花费的差不多了，之后访问量下来了，便每个月几块钱放在那里了，不过不管怎么说，也算是在互联网上留下了个自己的痕迹。\n# 专为虚拟主播打造的QQ机器人“鱼子酱”\n去年年底的时候，不知道为什么，各个QQ群里机器人突然多了起来，于是，我跟舰长群里一个朋友一拍即合，觉得可以搞一个机器人方便我们平时D虚拟主播，便开始研究起来，并给我们的机器人起名为鱼子酱。\n\n鱼子酱选用了[mirai](https://github.com/mamoe/mirai)框架，它是一个基于Android版QQ协议的机器人框架，然而我们俩都不会Kotlin，于是又引入了[mirai-http](https://github.com/project-mirai/mirai-api-http)框架来帮忙，mirai-http相当于在mirai的基础上开启了一个web服务，可以通过类似http请求的方式进行机器人的响应处理，而进行http请求就随我们熟悉的语言和框架来，我们就用了使用Python进行开发的[Saya框架](https://github.com/YiriMiraiProject/YiriMirai)。\n\n刚开始的时候，鱼子酱就只有一些跟虚拟主播有关的功能，比如直播开播提醒、b站动态发布推送、b站视频解析和微博动态推送等，用到了[DDBot框架](https://github.com/Sora233/DDBOT)。\n\n之后，为了提高娱乐性，又给鱼子酱加入了小互动（戳一戳及特殊关键词+@触发）、占卜抽卡、随机复读等娱乐功能，使用了[绪山真寻Bot](https://github.com/HibiKier/zhenxun_bot)，以及注入给鱼子酱注入灵魂的[AnimeThesaurus](https://github.com/Kyomotoi/AnimeThesaurus)，一个二次元语料库，让鱼子酱跟群友对话，好像真的活了起来：\n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fdf304d35cd444c48e770eb6a6defdce~tplv-k3u1fbpfcp-watermark.image?\"/ width=\"400\"></p>\n\n娱乐功能多起来之后，鱼子酱每时每刻都在“接客”（bushi），有些应接不暇，因此我们引入了[nonebot2](https://github.com/nonebot/nonebot2)来保证在大量数据吞吐的时候，鱼子酱也能应付自如。<br>\n\n迄今为止，鱼子酱已经服务了十几个舰长群，甚至有的新出道的虚拟主播也慕名而来请求将鱼子酱加入到他们的舰长群中，可以说是令人相当自豪的事了。\n\n# 虚拟主播视频投稿数据库\n我D的某一个虚拟主播经常发视频开团而导致视频失效，某一个虚拟主播则经常不满意自己以前唱过的歌，隔三岔五删除自己过去的视频。\n\n针对这种情况，我用nodejs写了个监听程序，自动监听并下载他们的视频，同时建立了数据库方便自己查找视频，之后又写了个后台程序部署到云托管服务上去，让自己随时随地都更方便的查找他们以前的视频。\n\nnodejs监听新视频发布这部分没有什么特别的，基本就是定时调用up主的视频列表接口比对已有数据，然后发现了新的数据就保存在数据库中并将视频下载下来。\n\n我是做前端工作的，数据库和后端对我来说是比较陌生的部分。由于我的数据结构基本不复杂，而在nodejs里也比较方便解析和处理JSON数据，因此我采用了NOSQL的Mongodb数据库。一开始我使用了免费的mongo cloud，但是由于服务器地址在境外，经常有连接不上的情况，因此最后我还是在自己的服务器本地安装了mongodb。使用nodejs操作mongodb比较简单，甚至感觉跟平时调接口获取数据区别不大。\n\n数据库建立起来之后，我想随时可以查看已经保存的数据，因此写了个后端，后端我使用了非常常见express框架，写了几个简单的路由加上之前刚学会的使用nodejs操作mongodb数据库，完成了几个查询接口：\n<p align=center><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e415b89c95340a585b18430e190db85~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n也有输出成表格形式的：\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4770507a07447d4984039b1ee2a71b2~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n下载下来的视频，时间长了数量多了逐渐填满了我的服务器硬盘，因此急需将视频转移到其他地方，同时还要满足随时下载的需求，那么此时OSS对象存储便是一个不错的选择了，我选择了七牛云存储，学习了一下七牛云的nodejsAPI，每次下载完成后都会将视频传输到七牛云OSS中，并且将外链与我自己的域名进行了捆绑，这样便随时可以进行下载了：\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b83383f1d64464cb38c621f1ff643d5~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n# 2022接下来准备做点啥\n- 准备主播新一年生日会的网页礼物\n- 为鱼子酱加入更多可互动功能\n- 学习接口的防刷防DDOS等相关的安全知识，可以放心把后台接口交给其他人使用（目前就只有我自己在用）\n- 开发权限功能，通过权限控制对数据库中主播投稿信息的查看、已失效视频的下载（也是为了可以放开给其他人使用）","source":"_posts/vup2022.md","raw":"---\ntitle: 2022年，我用技术来D虚拟主播\ndate: 2022-07-26 16:06:15\ntags: [前端,后端,Nodejs]\ncover: https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b3e2dfc8deb4662a73601de3c39fcac~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp?\n---\n\n2022年上半年，作为一个前端程序员，我为虚拟主播做了三件事：制作生日纪念网页、开发舰长群机器人、为主播的视频投稿建立备份数据库\n<!-- more -->\n# 写在前面\n为了避免各位观众老爷看到这些摸棱两可的名词不懂而直接跑掉，我先说下这半年里我都做了啥：\n- 部署了一个静态页面用作生日礼物\n- 开发了一个QQ机器人来发布消息和互动\n- 使用nodejs自动缓存up主的视频，并且建立了数据库部署了后台\n\n所用到的技术&做的工作：\n- 使用nodejs开发的千图成像程序\n- 域名备案\n- 静态网页托管\n- 基于Mirai的QQ机器人开发\n- nodejs的b站视频监听和下载\n- 使用nodejs操作mongodb\n- 基于express的后台程序\n- 腾讯云托管（篇幅有限没展开说）\n- 七牛云OSS的API上传及外链配置<br>\n\n这篇文章只是讲讲我几个项目的**思路和历程**，具体的技术细节就暂时不说啦。\n\n# 名词解释&背景\n以下是大家可能听不太懂的“专业名词”：\n- **虚拟主播**：也称vtuber、vup，是指真人不出镜，而是通过面部捕捉、动作捕捉等技术将虚拟人物画面呈现在屏幕上来进行视频制作和直播的网络主播\n- **DD**：中文对应弟弟，指虚拟主播的粉丝，词义相较于“粉丝”程度更深，即更加狂热，在部分场景下略有贬义\n- **D**：DD的动词化，指喜爱和推崇某个虚拟主播\n- **舰长**：某直播平台的礼物增值服务，价格从一百到两万不等，一般购买舰长的粉丝可以被认为是主播的核心粉丝群体，在一些互动中会有一些特权或者能掌握到一手的消息\n- **开团**：针对热点敏感事件，清晰而立场坚定地表达自己的态度和观点，由于在互联网上很容易引起各方的“战争”，类似于MOBA游戏中团战的发起者，因此称之为开团\n\n2022年，从卷城杭州回到了老家，在一个本地电商平台做了前端工作，虽然依然还是要加班，但是在项目和项目的间隙，还是有很多喘息的机会，于是便有机会开始琢磨一些技术方面的问题，其中让我比较感兴趣的有三个方面：\n- 静态网页的部署\n- QQ机器人\n- 后端及数据库\n\n而学习一项新的技术，做项目再合适不过了，恰逢这段时间迷上了虚拟主播，成为了臭DD，于是将这三个技术方面进行了项目的转化，分别是：\n- 为虚拟主播制作的生日纪念网页（域名备案、静态页面部署）\n- 专为虚拟主播打造的QQ机器人“鱼子酱”（这个是与其他人合作的，用Python开发）\n- 虚拟主播视频投稿数据库（mongoDB，express，nodejs）\n\n\n# 为虚拟主播制作的生日纪念网页\n虚拟主播会在生日当天举行生日特别直播，部分主播会在生日前征集一些创意投稿，但投稿无非是视频剪辑、绘画、音乐之类的，于是我另辟蹊径——做个交互网页吧，毕竟前端是我的老本行，于是我制作了一个由多幅绘画拼接成的主播头像的马赛克大图，效果如下：\n\n<p align=center><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7dc72c94738e44beaa5a8f21607080ec~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\" /></p>\n\n这个马赛克拼图的算法也是我用Nodejs来写的，这个回头单开一篇文章说。<br>\n静态网页写好了之后，要怎么给主播看呢，放在自己的服务器上，把IP地址发给主播？自然不是好主意，万一服务器到期了呢，而且似乎还有我不知道的安全性问题，也缺少cdn可能会导致加载缓慢。于是，**域名+静态网站托管**的方案便成为了我的选择。<br>\n首先，购买一个域名虽然不贵，但是在中国大陆部署的服务，需要进行备案。<br>\n简单说下，备案的过程基本上经历了**实名认证**-**提交照片和材料**-**平台预审**-**工信部审核**几个过程，时间比较长但是并不麻烦。（想起来十年前备案的时候还要把幕布寄来寄去来着）<br>\n关于备案的几个小要点：\n- 人脸认证的时候穿上衣服~\n- 网站用途不要有送给别人的礼物之类的字样，要说明网站是自己的\n- 平台预审和工信部审核阶段都可能有电话打过来，记得注意电话\n\n接下来，便是网站的托管服务，我选择了腾讯云云开发里的静态网站托管服务，虽然是第一次用，但是整体使用起来没什么难度，基本就是这几个步骤：\n- 把自己打包好的静态页面文件上传\n- 在设置中配置好自己的域名\n- 在DNS中设置好托管服务提供的CNAME记录<br>\n\n在主播生日那几天访问量有点大，买了20块钱流量包几十个G花费的差不多了，之后访问量下来了，便每个月几块钱放在那里了，不过不管怎么说，也算是在互联网上留下了个自己的痕迹。\n# 专为虚拟主播打造的QQ机器人“鱼子酱”\n去年年底的时候，不知道为什么，各个QQ群里机器人突然多了起来，于是，我跟舰长群里一个朋友一拍即合，觉得可以搞一个机器人方便我们平时D虚拟主播，便开始研究起来，并给我们的机器人起名为鱼子酱。\n\n鱼子酱选用了[mirai](https://github.com/mamoe/mirai)框架，它是一个基于Android版QQ协议的机器人框架，然而我们俩都不会Kotlin，于是又引入了[mirai-http](https://github.com/project-mirai/mirai-api-http)框架来帮忙，mirai-http相当于在mirai的基础上开启了一个web服务，可以通过类似http请求的方式进行机器人的响应处理，而进行http请求就随我们熟悉的语言和框架来，我们就用了使用Python进行开发的[Saya框架](https://github.com/YiriMiraiProject/YiriMirai)。\n\n刚开始的时候，鱼子酱就只有一些跟虚拟主播有关的功能，比如直播开播提醒、b站动态发布推送、b站视频解析和微博动态推送等，用到了[DDBot框架](https://github.com/Sora233/DDBOT)。\n\n之后，为了提高娱乐性，又给鱼子酱加入了小互动（戳一戳及特殊关键词+@触发）、占卜抽卡、随机复读等娱乐功能，使用了[绪山真寻Bot](https://github.com/HibiKier/zhenxun_bot)，以及注入给鱼子酱注入灵魂的[AnimeThesaurus](https://github.com/Kyomotoi/AnimeThesaurus)，一个二次元语料库，让鱼子酱跟群友对话，好像真的活了起来：\n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fdf304d35cd444c48e770eb6a6defdce~tplv-k3u1fbpfcp-watermark.image?\"/ width=\"400\"></p>\n\n娱乐功能多起来之后，鱼子酱每时每刻都在“接客”（bushi），有些应接不暇，因此我们引入了[nonebot2](https://github.com/nonebot/nonebot2)来保证在大量数据吞吐的时候，鱼子酱也能应付自如。<br>\n\n迄今为止，鱼子酱已经服务了十几个舰长群，甚至有的新出道的虚拟主播也慕名而来请求将鱼子酱加入到他们的舰长群中，可以说是令人相当自豪的事了。\n\n# 虚拟主播视频投稿数据库\n我D的某一个虚拟主播经常发视频开团而导致视频失效，某一个虚拟主播则经常不满意自己以前唱过的歌，隔三岔五删除自己过去的视频。\n\n针对这种情况，我用nodejs写了个监听程序，自动监听并下载他们的视频，同时建立了数据库方便自己查找视频，之后又写了个后台程序部署到云托管服务上去，让自己随时随地都更方便的查找他们以前的视频。\n\nnodejs监听新视频发布这部分没有什么特别的，基本就是定时调用up主的视频列表接口比对已有数据，然后发现了新的数据就保存在数据库中并将视频下载下来。\n\n我是做前端工作的，数据库和后端对我来说是比较陌生的部分。由于我的数据结构基本不复杂，而在nodejs里也比较方便解析和处理JSON数据，因此我采用了NOSQL的Mongodb数据库。一开始我使用了免费的mongo cloud，但是由于服务器地址在境外，经常有连接不上的情况，因此最后我还是在自己的服务器本地安装了mongodb。使用nodejs操作mongodb比较简单，甚至感觉跟平时调接口获取数据区别不大。\n\n数据库建立起来之后，我想随时可以查看已经保存的数据，因此写了个后端，后端我使用了非常常见express框架，写了几个简单的路由加上之前刚学会的使用nodejs操作mongodb数据库，完成了几个查询接口：\n<p align=center><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e415b89c95340a585b18430e190db85~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n也有输出成表格形式的：\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4770507a07447d4984039b1ee2a71b2~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n下载下来的视频，时间长了数量多了逐渐填满了我的服务器硬盘，因此急需将视频转移到其他地方，同时还要满足随时下载的需求，那么此时OSS对象存储便是一个不错的选择了，我选择了七牛云存储，学习了一下七牛云的nodejsAPI，每次下载完成后都会将视频传输到七牛云OSS中，并且将外链与我自己的域名进行了捆绑，这样便随时可以进行下载了：\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b83383f1d64464cb38c621f1ff643d5~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n# 2022接下来准备做点啥\n- 准备主播新一年生日会的网页礼物\n- 为鱼子酱加入更多可互动功能\n- 学习接口的防刷防DDOS等相关的安全知识，可以放心把后台接口交给其他人使用（目前就只有我自己在用）\n- 开发权限功能，通过权限控制对数据库中主播投稿信息的查看、已失效视频的下载（也是为了可以放开给其他人使用）","slug":"vup2022","published":1,"updated":"2022-10-24T00:35:12.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9m3k9s00001dcwf027hfu4h","content":"<p>2022年上半年，作为一个前端程序员，我为虚拟主播做了三件事：制作生日纪念网页、开发舰长群机器人、为主播的视频投稿建立备份数据库</p>\n<span id=\"more\"></span>\n<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>为了避免各位观众老爷看到这些摸棱两可的名词不懂而直接跑掉，我先说下这半年里我都做了啥：</p>\n<ul>\n<li>部署了一个静态页面用作生日礼物</li>\n<li>开发了一个QQ机器人来发布消息和互动</li>\n<li>使用nodejs自动缓存up主的视频，并且建立了数据库部署了后台</li>\n</ul>\n<p>所用到的技术&amp;做的工作：</p>\n<ul>\n<li>使用nodejs开发的千图成像程序</li>\n<li>域名备案</li>\n<li>静态网页托管</li>\n<li>基于Mirai的QQ机器人开发</li>\n<li>nodejs的b站视频监听和下载</li>\n<li>使用nodejs操作mongodb</li>\n<li>基于express的后台程序</li>\n<li>腾讯云托管（篇幅有限没展开说）</li>\n<li>七牛云OSS的API上传及外链配置<br></li>\n</ul>\n<p>这篇文章只是讲讲我几个项目的<strong>思路和历程</strong>，具体的技术细节就暂时不说啦。</p>\n<h1 id=\"名词解释-amp-背景\"><a href=\"#名词解释-amp-背景\" class=\"headerlink\" title=\"名词解释&amp;背景\"></a>名词解释&amp;背景</h1><p>以下是大家可能听不太懂的“专业名词”：</p>\n<ul>\n<li><strong>虚拟主播</strong>：也称vtuber、vup，是指真人不出镜，而是通过面部捕捉、动作捕捉等技术将虚拟人物画面呈现在屏幕上来进行视频制作和直播的网络主播</li>\n<li><strong>DD</strong>：中文对应弟弟，指虚拟主播的粉丝，词义相较于“粉丝”程度更深，即更加狂热，在部分场景下略有贬义</li>\n<li><strong>D</strong>：DD的动词化，指喜爱和推崇某个虚拟主播</li>\n<li><strong>舰长</strong>：某直播平台的礼物增值服务，价格从一百到两万不等，一般购买舰长的粉丝可以被认为是主播的核心粉丝群体，在一些互动中会有一些特权或者能掌握到一手的消息</li>\n<li><strong>开团</strong>：针对热点敏感事件，清晰而立场坚定地表达自己的态度和观点，由于在互联网上很容易引起各方的“战争”，类似于MOBA游戏中团战的发起者，因此称之为开团</li>\n</ul>\n<p>2022年，从卷城杭州回到了老家，在一个本地电商平台做了前端工作，虽然依然还是要加班，但是在项目和项目的间隙，还是有很多喘息的机会，于是便有机会开始琢磨一些技术方面的问题，其中让我比较感兴趣的有三个方面：</p>\n<ul>\n<li>静态网页的部署</li>\n<li>QQ机器人</li>\n<li>后端及数据库</li>\n</ul>\n<p>而学习一项新的技术，做项目再合适不过了，恰逢这段时间迷上了虚拟主播，成为了臭DD，于是将这三个技术方面进行了项目的转化，分别是：</p>\n<ul>\n<li>为虚拟主播制作的生日纪念网页（域名备案、静态页面部署）</li>\n<li>专为虚拟主播打造的QQ机器人“鱼子酱”（这个是与其他人合作的，用Python开发）</li>\n<li>虚拟主播视频投稿数据库（mongoDB，express，nodejs）</li>\n</ul>\n<h1 id=\"为虚拟主播制作的生日纪念网页\"><a href=\"#为虚拟主播制作的生日纪念网页\" class=\"headerlink\" title=\"为虚拟主播制作的生日纪念网页\"></a>为虚拟主播制作的生日纪念网页</h1><p>虚拟主播会在生日当天举行生日特别直播，部分主播会在生日前征集一些创意投稿，但投稿无非是视频剪辑、绘画、音乐之类的，于是我另辟蹊径——做个交互网页吧，毕竟前端是我的老本行，于是我制作了一个由多幅绘画拼接成的主播头像的马赛克大图，效果如下：</p>\n<p align=center><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7dc72c94738e44beaa5a8f21607080ec~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\" /></p>\n\n<p>这个马赛克拼图的算法也是我用Nodejs来写的，这个回头单开一篇文章说。<br><br>静态网页写好了之后，要怎么给主播看呢，放在自己的服务器上，把IP地址发给主播？自然不是好主意，万一服务器到期了呢，而且似乎还有我不知道的安全性问题，也缺少cdn可能会导致加载缓慢。于是，<strong>域名+静态网站托管</strong>的方案便成为了我的选择。<br><br>首先，购买一个域名虽然不贵，但是在中国大陆部署的服务，需要进行备案。<br><br>简单说下，备案的过程基本上经历了<strong>实名认证</strong>-<strong>提交照片和材料</strong>-<strong>平台预审</strong>-<strong>工信部审核</strong>几个过程，时间比较长但是并不麻烦。（想起来十年前备案的时候还要把幕布寄来寄去来着）<br><br>关于备案的几个小要点：</p>\n<ul>\n<li>人脸认证的时候穿上衣服~</li>\n<li>网站用途不要有送给别人的礼物之类的字样，要说明网站是自己的</li>\n<li>平台预审和工信部审核阶段都可能有电话打过来，记得注意电话</li>\n</ul>\n<p>接下来，便是网站的托管服务，我选择了腾讯云云开发里的静态网站托管服务，虽然是第一次用，但是整体使用起来没什么难度，基本就是这几个步骤：</p>\n<ul>\n<li>把自己打包好的静态页面文件上传</li>\n<li>在设置中配置好自己的域名</li>\n<li>在DNS中设置好托管服务提供的CNAME记录<br></li>\n</ul>\n<p>在主播生日那几天访问量有点大，买了20块钱流量包几十个G花费的差不多了，之后访问量下来了，便每个月几块钱放在那里了，不过不管怎么说，也算是在互联网上留下了个自己的痕迹。</p>\n<h1 id=\"专为虚拟主播打造的QQ机器人“鱼子酱”\"><a href=\"#专为虚拟主播打造的QQ机器人“鱼子酱”\" class=\"headerlink\" title=\"专为虚拟主播打造的QQ机器人“鱼子酱”\"></a>专为虚拟主播打造的QQ机器人“鱼子酱”</h1><p>去年年底的时候，不知道为什么，各个QQ群里机器人突然多了起来，于是，我跟舰长群里一个朋友一拍即合，觉得可以搞一个机器人方便我们平时D虚拟主播，便开始研究起来，并给我们的机器人起名为鱼子酱。</p>\n<p>鱼子酱选用了<a href=\"https://github.com/mamoe/mirai\">mirai</a>框架，它是一个基于Android版QQ协议的机器人框架，然而我们俩都不会Kotlin，于是又引入了<a href=\"https://github.com/project-mirai/mirai-api-http\">mirai-http</a>框架来帮忙，mirai-http相当于在mirai的基础上开启了一个web服务，可以通过类似http请求的方式进行机器人的响应处理，而进行http请求就随我们熟悉的语言和框架来，我们就用了使用Python进行开发的<a href=\"https://github.com/YiriMiraiProject/YiriMirai\">Saya框架</a>。</p>\n<p>刚开始的时候，鱼子酱就只有一些跟虚拟主播有关的功能，比如直播开播提醒、b站动态发布推送、b站视频解析和微博动态推送等，用到了<a href=\"https://github.com/Sora233/DDBOT\">DDBot框架</a>。</p>\n<p>之后，为了提高娱乐性，又给鱼子酱加入了小互动（戳一戳及特殊关键词+@触发）、占卜抽卡、随机复读等娱乐功能，使用了<a href=\"https://github.com/HibiKier/zhenxun_bot\">绪山真寻Bot</a>，以及注入给鱼子酱注入灵魂的<a href=\"https://github.com/Kyomotoi/AnimeThesaurus\">AnimeThesaurus</a>，一个二次元语料库，让鱼子酱跟群友对话，好像真的活了起来：</p>\n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fdf304d35cd444c48e770eb6a6defdce~tplv-k3u1fbpfcp-watermark.image?\"/ width=\"400\"></p>\n\n<p>娱乐功能多起来之后，鱼子酱每时每刻都在“接客”（bushi），有些应接不暇，因此我们引入了<a href=\"https://github.com/nonebot/nonebot2\">nonebot2</a>来保证在大量数据吞吐的时候，鱼子酱也能应付自如。<br></p>\n<p>迄今为止，鱼子酱已经服务了十几个舰长群，甚至有的新出道的虚拟主播也慕名而来请求将鱼子酱加入到他们的舰长群中，可以说是令人相当自豪的事了。</p>\n<h1 id=\"虚拟主播视频投稿数据库\"><a href=\"#虚拟主播视频投稿数据库\" class=\"headerlink\" title=\"虚拟主播视频投稿数据库\"></a>虚拟主播视频投稿数据库</h1><p>我D的某一个虚拟主播经常发视频开团而导致视频失效，某一个虚拟主播则经常不满意自己以前唱过的歌，隔三岔五删除自己过去的视频。</p>\n<p>针对这种情况，我用nodejs写了个监听程序，自动监听并下载他们的视频，同时建立了数据库方便自己查找视频，之后又写了个后台程序部署到云托管服务上去，让自己随时随地都更方便的查找他们以前的视频。</p>\n<p>nodejs监听新视频发布这部分没有什么特别的，基本就是定时调用up主的视频列表接口比对已有数据，然后发现了新的数据就保存在数据库中并将视频下载下来。</p>\n<p>我是做前端工作的，数据库和后端对我来说是比较陌生的部分。由于我的数据结构基本不复杂，而在nodejs里也比较方便解析和处理JSON数据，因此我采用了NOSQL的Mongodb数据库。一开始我使用了免费的mongo cloud，但是由于服务器地址在境外，经常有连接不上的情况，因此最后我还是在自己的服务器本地安装了mongodb。使用nodejs操作mongodb比较简单，甚至感觉跟平时调接口获取数据区别不大。</p>\n<p>数据库建立起来之后，我想随时可以查看已经保存的数据，因此写了个后端，后端我使用了非常常见express框架，写了几个简单的路由加上之前刚学会的使用nodejs操作mongodb数据库，完成了几个查询接口：</p>\n<p align=center><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e415b89c95340a585b18430e190db85~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n也有输出成表格形式的：\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4770507a07447d4984039b1ee2a71b2~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n<p>下载下来的视频，时间长了数量多了逐渐填满了我的服务器硬盘，因此急需将视频转移到其他地方，同时还要满足随时下载的需求，那么此时OSS对象存储便是一个不错的选择了，我选择了七牛云存储，学习了一下七牛云的nodejsAPI，每次下载完成后都会将视频传输到七牛云OSS中，并且将外链与我自己的域名进行了捆绑，这样便随时可以进行下载了：</p>\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b83383f1d64464cb38c621f1ff643d5~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n<h1 id=\"2022接下来准备做点啥\"><a href=\"#2022接下来准备做点啥\" class=\"headerlink\" title=\"2022接下来准备做点啥\"></a>2022接下来准备做点啥</h1><ul>\n<li>准备主播新一年生日会的网页礼物</li>\n<li>为鱼子酱加入更多可互动功能</li>\n<li>学习接口的防刷防DDOS等相关的安全知识，可以放心把后台接口交给其他人使用（目前就只有我自己在用）</li>\n<li>开发权限功能，通过权限控制对数据库中主播投稿信息的查看、已失效视频的下载（也是为了可以放开给其他人使用）</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>2022年上半年，作为一个前端程序员，我为虚拟主播做了三件事：制作生日纪念网页、开发舰长群机器人、为主播的视频投稿建立备份数据库</p>","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>为了避免各位观众老爷看到这些摸棱两可的名词不懂而直接跑掉，我先说下这半年里我都做了啥：</p>\n<ul>\n<li>部署了一个静态页面用作生日礼物</li>\n<li>开发了一个QQ机器人来发布消息和互动</li>\n<li>使用nodejs自动缓存up主的视频，并且建立了数据库部署了后台</li>\n</ul>\n<p>所用到的技术&amp;做的工作：</p>\n<ul>\n<li>使用nodejs开发的千图成像程序</li>\n<li>域名备案</li>\n<li>静态网页托管</li>\n<li>基于Mirai的QQ机器人开发</li>\n<li>nodejs的b站视频监听和下载</li>\n<li>使用nodejs操作mongodb</li>\n<li>基于express的后台程序</li>\n<li>腾讯云托管（篇幅有限没展开说）</li>\n<li>七牛云OSS的API上传及外链配置<br></li>\n</ul>\n<p>这篇文章只是讲讲我几个项目的<strong>思路和历程</strong>，具体的技术细节就暂时不说啦。</p>\n<h1 id=\"名词解释-amp-背景\"><a href=\"#名词解释-amp-背景\" class=\"headerlink\" title=\"名词解释&amp;背景\"></a>名词解释&amp;背景</h1><p>以下是大家可能听不太懂的“专业名词”：</p>\n<ul>\n<li><strong>虚拟主播</strong>：也称vtuber、vup，是指真人不出镜，而是通过面部捕捉、动作捕捉等技术将虚拟人物画面呈现在屏幕上来进行视频制作和直播的网络主播</li>\n<li><strong>DD</strong>：中文对应弟弟，指虚拟主播的粉丝，词义相较于“粉丝”程度更深，即更加狂热，在部分场景下略有贬义</li>\n<li><strong>D</strong>：DD的动词化，指喜爱和推崇某个虚拟主播</li>\n<li><strong>舰长</strong>：某直播平台的礼物增值服务，价格从一百到两万不等，一般购买舰长的粉丝可以被认为是主播的核心粉丝群体，在一些互动中会有一些特权或者能掌握到一手的消息</li>\n<li><strong>开团</strong>：针对热点敏感事件，清晰而立场坚定地表达自己的态度和观点，由于在互联网上很容易引起各方的“战争”，类似于MOBA游戏中团战的发起者，因此称之为开团</li>\n</ul>\n<p>2022年，从卷城杭州回到了老家，在一个本地电商平台做了前端工作，虽然依然还是要加班，但是在项目和项目的间隙，还是有很多喘息的机会，于是便有机会开始琢磨一些技术方面的问题，其中让我比较感兴趣的有三个方面：</p>\n<ul>\n<li>静态网页的部署</li>\n<li>QQ机器人</li>\n<li>后端及数据库</li>\n</ul>\n<p>而学习一项新的技术，做项目再合适不过了，恰逢这段时间迷上了虚拟主播，成为了臭DD，于是将这三个技术方面进行了项目的转化，分别是：</p>\n<ul>\n<li>为虚拟主播制作的生日纪念网页（域名备案、静态页面部署）</li>\n<li>专为虚拟主播打造的QQ机器人“鱼子酱”（这个是与其他人合作的，用Python开发）</li>\n<li>虚拟主播视频投稿数据库（mongoDB，express，nodejs）</li>\n</ul>\n<h1 id=\"为虚拟主播制作的生日纪念网页\"><a href=\"#为虚拟主播制作的生日纪念网页\" class=\"headerlink\" title=\"为虚拟主播制作的生日纪念网页\"></a>为虚拟主播制作的生日纪念网页</h1><p>虚拟主播会在生日当天举行生日特别直播，部分主播会在生日前征集一些创意投稿，但投稿无非是视频剪辑、绘画、音乐之类的，于是我另辟蹊径——做个交互网页吧，毕竟前端是我的老本行，于是我制作了一个由多幅绘画拼接成的主播头像的马赛克大图，效果如下：</p>\n<p align=center><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7dc72c94738e44beaa5a8f21607080ec~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\" /></p>\n\n<p>这个马赛克拼图的算法也是我用Nodejs来写的，这个回头单开一篇文章说。<br><br>静态网页写好了之后，要怎么给主播看呢，放在自己的服务器上，把IP地址发给主播？自然不是好主意，万一服务器到期了呢，而且似乎还有我不知道的安全性问题，也缺少cdn可能会导致加载缓慢。于是，<strong>域名+静态网站托管</strong>的方案便成为了我的选择。<br><br>首先，购买一个域名虽然不贵，但是在中国大陆部署的服务，需要进行备案。<br><br>简单说下，备案的过程基本上经历了<strong>实名认证</strong>-<strong>提交照片和材料</strong>-<strong>平台预审</strong>-<strong>工信部审核</strong>几个过程，时间比较长但是并不麻烦。（想起来十年前备案的时候还要把幕布寄来寄去来着）<br><br>关于备案的几个小要点：</p>\n<ul>\n<li>人脸认证的时候穿上衣服~</li>\n<li>网站用途不要有送给别人的礼物之类的字样，要说明网站是自己的</li>\n<li>平台预审和工信部审核阶段都可能有电话打过来，记得注意电话</li>\n</ul>\n<p>接下来，便是网站的托管服务，我选择了腾讯云云开发里的静态网站托管服务，虽然是第一次用，但是整体使用起来没什么难度，基本就是这几个步骤：</p>\n<ul>\n<li>把自己打包好的静态页面文件上传</li>\n<li>在设置中配置好自己的域名</li>\n<li>在DNS中设置好托管服务提供的CNAME记录<br></li>\n</ul>\n<p>在主播生日那几天访问量有点大，买了20块钱流量包几十个G花费的差不多了，之后访问量下来了，便每个月几块钱放在那里了，不过不管怎么说，也算是在互联网上留下了个自己的痕迹。</p>\n<h1 id=\"专为虚拟主播打造的QQ机器人“鱼子酱”\"><a href=\"#专为虚拟主播打造的QQ机器人“鱼子酱”\" class=\"headerlink\" title=\"专为虚拟主播打造的QQ机器人“鱼子酱”\"></a>专为虚拟主播打造的QQ机器人“鱼子酱”</h1><p>去年年底的时候，不知道为什么，各个QQ群里机器人突然多了起来，于是，我跟舰长群里一个朋友一拍即合，觉得可以搞一个机器人方便我们平时D虚拟主播，便开始研究起来，并给我们的机器人起名为鱼子酱。</p>\n<p>鱼子酱选用了<a href=\"https://github.com/mamoe/mirai\">mirai</a>框架，它是一个基于Android版QQ协议的机器人框架，然而我们俩都不会Kotlin，于是又引入了<a href=\"https://github.com/project-mirai/mirai-api-http\">mirai-http</a>框架来帮忙，mirai-http相当于在mirai的基础上开启了一个web服务，可以通过类似http请求的方式进行机器人的响应处理，而进行http请求就随我们熟悉的语言和框架来，我们就用了使用Python进行开发的<a href=\"https://github.com/YiriMiraiProject/YiriMirai\">Saya框架</a>。</p>\n<p>刚开始的时候，鱼子酱就只有一些跟虚拟主播有关的功能，比如直播开播提醒、b站动态发布推送、b站视频解析和微博动态推送等，用到了<a href=\"https://github.com/Sora233/DDBOT\">DDBot框架</a>。</p>\n<p>之后，为了提高娱乐性，又给鱼子酱加入了小互动（戳一戳及特殊关键词+@触发）、占卜抽卡、随机复读等娱乐功能，使用了<a href=\"https://github.com/HibiKier/zhenxun_bot\">绪山真寻Bot</a>，以及注入给鱼子酱注入灵魂的<a href=\"https://github.com/Kyomotoi/AnimeThesaurus\">AnimeThesaurus</a>，一个二次元语料库，让鱼子酱跟群友对话，好像真的活了起来：</p>\n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fdf304d35cd444c48e770eb6a6defdce~tplv-k3u1fbpfcp-watermark.image?\"/ width=\"400\"></p>\n\n<p>娱乐功能多起来之后，鱼子酱每时每刻都在“接客”（bushi），有些应接不暇，因此我们引入了<a href=\"https://github.com/nonebot/nonebot2\">nonebot2</a>来保证在大量数据吞吐的时候，鱼子酱也能应付自如。<br></p>\n<p>迄今为止，鱼子酱已经服务了十几个舰长群，甚至有的新出道的虚拟主播也慕名而来请求将鱼子酱加入到他们的舰长群中，可以说是令人相当自豪的事了。</p>\n<h1 id=\"虚拟主播视频投稿数据库\"><a href=\"#虚拟主播视频投稿数据库\" class=\"headerlink\" title=\"虚拟主播视频投稿数据库\"></a>虚拟主播视频投稿数据库</h1><p>我D的某一个虚拟主播经常发视频开团而导致视频失效，某一个虚拟主播则经常不满意自己以前唱过的歌，隔三岔五删除自己过去的视频。</p>\n<p>针对这种情况，我用nodejs写了个监听程序，自动监听并下载他们的视频，同时建立了数据库方便自己查找视频，之后又写了个后台程序部署到云托管服务上去，让自己随时随地都更方便的查找他们以前的视频。</p>\n<p>nodejs监听新视频发布这部分没有什么特别的，基本就是定时调用up主的视频列表接口比对已有数据，然后发现了新的数据就保存在数据库中并将视频下载下来。</p>\n<p>我是做前端工作的，数据库和后端对我来说是比较陌生的部分。由于我的数据结构基本不复杂，而在nodejs里也比较方便解析和处理JSON数据，因此我采用了NOSQL的Mongodb数据库。一开始我使用了免费的mongo cloud，但是由于服务器地址在境外，经常有连接不上的情况，因此最后我还是在自己的服务器本地安装了mongodb。使用nodejs操作mongodb比较简单，甚至感觉跟平时调接口获取数据区别不大。</p>\n<p>数据库建立起来之后，我想随时可以查看已经保存的数据，因此写了个后端，后端我使用了非常常见express框架，写了几个简单的路由加上之前刚学会的使用nodejs操作mongodb数据库，完成了几个查询接口：</p>\n<p align=center><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e415b89c95340a585b18430e190db85~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n也有输出成表格形式的：\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4770507a07447d4984039b1ee2a71b2~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n<p>下载下来的视频，时间长了数量多了逐渐填满了我的服务器硬盘，因此急需将视频转移到其他地方，同时还要满足随时下载的需求，那么此时OSS对象存储便是一个不错的选择了，我选择了七牛云存储，学习了一下七牛云的nodejsAPI，每次下载完成后都会将视频传输到七牛云OSS中，并且将外链与我自己的域名进行了捆绑，这样便随时可以进行下载了：</p>\n<p align=center><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b83383f1d64464cb38c621f1ff643d5~tplv-k3u1fbpfcp-watermark.image?\" width=\"400\"/></p>\n\n<h1 id=\"2022接下来准备做点啥\"><a href=\"#2022接下来准备做点啥\" class=\"headerlink\" title=\"2022接下来准备做点啥\"></a>2022接下来准备做点啥</h1><ul>\n<li>准备主播新一年生日会的网页礼物</li>\n<li>为鱼子酱加入更多可互动功能</li>\n<li>学习接口的防刷防DDOS等相关的安全知识，可以放心把后台接口交给其他人使用（目前就只有我自己在用）</li>\n<li>开发权限功能，通过权限控制对数据库中主播投稿信息的查看、已失效视频的下载（也是为了可以放开给其他人使用）</li>\n</ul>"},{"title":"scoop，一条命令安装windows软件","date":"2022-07-28T00:48:22.000Z","cover":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e266d1ebdb744f88e852fa07355bc3c~tplv-k3u1fbpfcp-no-mark:480:480:0:0.awebp?","_content":"下载软件带了病毒？环境变量没配好？软件缺少相关依赖导致无法运行？那就试试scoop吧，一条命令搞定你所有问题！\n\n<!-- more -->\n\n- 你是否在为无法找到合适的软件资源苦恼着？（高速下载、\\*\\*之家，XX安装器）\n- 你是否在为环境变量的配置抓狂着？（JAVA_HOME，NGINX_HOME）\n- 你是否羡慕着linux，mac上一行命令直接安装软件？（apt-get,brew）\n- 你是否需要经常切换软件的版本？（JAVA8，JAVA11 Python2，Python3）\n- 你是否被某些软件的依赖搞到抓狂？（tomcat-JRE）\n\n那适合你的工具来了！\n那就是：<br>\n    \n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d3c8a474179462b849d99cef2448be3~tplv-k3u1fbpfcp-watermark.image?\"/></p>\n\n**<p align=center> Scoop </p>**\n\n想安装Python？一条：\n\n```\nscoop install python\n```\n想查找不同版本的JAVA安装？先搜索：\n\n```\nscoop search jdk\n```\n得到：\n\n```\n'java' bucket:\n    ...太多了不放出来了\n    openjdk (18.0.1.1-2)\n    openjdk10 (10.0.2-13)\n    openjdk11 (11.0.2-9)\n    openjdk12 (12.0.2-10)\n    openjdk13 (13.0.2-8)\n    openjdk14 (14.0.2-12)\n    openjdk15 (15.0.2-7)\n    openjdk16 (16.0.2-7)\n    openjdk17 (17.0.2-8)\n    openjdk18 (18.0.1.1-2)\n    openjdk19 (19-28-ea)\n    ...\n```\n选择JAVA18进行安装:\n\n```\nscoop install openjdk18\n```\n安装完成后直接运行，环境变量也帮你配好了：\n```\njava -version\n```\n```\njava version \"18.0.1.1\" 2022-04-22\nJava(TM) SE Runtime Environment (build 18.0.1.1+2-6)\nJava HotSpot(TM) 64-Bit Server VM (build 18.0.1.1+2-6, mixed mode, sharing)\n```\n\n那么，开始吧：\n# 系统要求\n- Windows 7 SP1+ / Windows Server 2008+\n- PowerShell 3（或更高版本）和 .NET Framework 4.5+\n- 启用PowerShell，并且`executionpolicy`可以设置成`remotesigned`(参考之后的步骤)\n\n确保已安装 PowerShell 3 或更高版本。 如果使用的是 Windows 10 或 Windows Server 2012 就可以直接用，但 Windows 7 和 Windows Server 2008 估计需要去升级PowerShell，powerShell的官方下载地址：\nhttps://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/install/installing-windows-powershell?view=powershell-7.2#upgrading-existing-windows-powershell\n\n可以使用以下命令检查powershell版本：\n```\n$psversiontable.psversion.major\n```\n如果返回的数字大于3，就再次输入这个命令（否则先通过上面的链接升级）：\n```\nset-executionpolicy remotesigned -scope currentuser\n```\n# 安装\n## 设置安装位置（可跳过）\nscoop默认是安装在`C:\\Users\\[你的账户名]\\scoop`下的，如果不想安装在这里，要首先指定安装目录（下面的例子安装在`D:\\Applications\\Scoop`）：\n\n```\n[environment]::setEnvironmentVariable('SCOOP', 'D:\\Applications\\Scoop', 'User')\n$env:SCOOP='D:\\Applications\\Scoop'\n```\n## 安装scoop\n继续在Powershell中输入：\n```\niex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n```\n等待命令执行完毕，就安装成功了\n## 设置全局软件安装位置（可跳过）\n软件安装时可以加入一个global参数，安装在全局位置，否则就会安装到用户目录下，这个全局安装位置默认在`C:\\GlobalScoopApps`下，可以通过如下命令进行修改（下面的例子中安装在`F:\\GlobalScoopApps`）:\n```\n[environment]::setEnvironmentVariable('SCOOP_GLOBAL','F:\\GlobalScoopApps','Machine')\n$env:SCOOP_GLOBAL='F:\\GlobalScoopApps'\n```\n# 使用Scoop\n## 常用命令\n输入`scoop help`可以查看所有scoop命令\n```\nalias       Manage scoop aliases\nbucket      Manage Scoop buckets\ncache       Show or clear the download cache\ncat         Show content of specified manifest. If available, `bat` will be used to pretty-print the JSON.\ncheckup     Check for potential problems\ncleanup     Cleanup apps by removing old versions\nconfig      Get or set configuration values\ncreate      Create a custom app manifest\ndepends     List dependencies for an app\ndownload    Download apps in the cache folder and verify hashes\nexport      Exports (an importable) list of installed apps\nhelp        Show help for a command\nhold        Hold an app to disable updates\nhome        Opens the app homepage\ninfo        Display information about an app\ninstall     Install apps\nlist        List installed apps\nprefix      Returns the path to the specified app\nreset       Reset an app to resolve conflicts\nsearch      Search available apps\nshim        Manipulate Scoop shims\nstatus      Show status and check for new app versions\nunhold      Unhold an app to enable updates\nuninstall   Uninstall an app\nupdate      Update apps, or Scoop itself\nvirustotal  Look for app’s hash or url on virustotal.com\nwhich       Locate a shim/executable (similar to ‘which’ on Linux)\n```\n其中比较常用的是：\n\n| 命令 | 描述 | 示例 |\n| --- | --- | --- |\n| install | 安装指定名称的软件 | scoop install tomcat |\n| uninstall | 卸载指定名称的软件 | scoop uninstall mongodb |\n| update | 更新指定名称的软件 | scoop update vscode |\n| search | 搜索包含指定名称的软件 | scoop search jdk |\n| list | 列出所有已经安装的软件 | scoop list |\n| reset | 将指定版本的软件添加到环境变量 | scoop reset oraclejdk|\n| bucket | 软件仓库管理(下文详谈） | scoop bucket add extra |\n\n所以最简单的安装方法就是`scoop intall`了，一个`scoop install vscode`，文本编辑器就安装好了！\n## 增加软件仓库\n输入`scoop bucket list`命令，可以看到类似这样的返回值：\n```powershell\nName   Source                                   Updated            Manifests\n----   ------                                   -------            ---------\nextras https://github.com/ScoopInstaller/Extras 2022/6/30 17:41:19      1580\njava   https://github.com/ScoopInstaller/Java   2022/6/30 17:50:23       224\nmain   https://github.com/ScoopInstaller/Main   2022/6/30 12:32:29      1053\n```\n如果你是第一次安装的话，这里应该只会显示一行`name`为`main`的数据，也就是说当前你只有一个默认仓库，有可能并没有收录你需要的软件，因此需要增加新的仓库。<br>\n一些官方默认仓库可以直接使用仓库名称，比如：\n```\nscoop bucket add extras #强烈推荐使用这个仓库，扩充了大量软件\n```\n而其他的第三方仓库则需要设定别名之后填写地址：\n```\nscoop bucket add dorado https://github.com/chawyehsu/dorado\n```\nscoop官网推荐了如下的软件仓库：\n仓库名 (30)                                                                              | 描述+我的吐槽                                                                                                                                                      | Star数 |\n| ---------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| [extras ](https://github.com/ScoopInstaller/Extras)                                      | 📦 Scoop官方的补充仓库.                                                                                                                                  | 1345  |\n| [main ](https://github.com/ScoopInstaller/Main)                                          | 📦 Scoop官方的默认仓库.                                                                                                                                 | 977   |\n| [chawyehsu/dorado ](https://github.com/chawyehsu/dorado)                                 | 🐟 也是另一个Scoop的补充仓库                                                                                                                           | 698   |\n| [nerd-fonts ](https://github.com/matthewjberger/scoop-nerd-fonts)                        |  nerd字体仓库                                                                                                                         | 225   |\n| [java ](https://github.com/ScoopInstaller/Java)                                          | 📦 Scoop的Java仓库，包括以下厂商的版本：Oracle Java, OpenJDK, Eclipse Temurin, IBM Semeru, Zulu, ojdkbuild, Amazon Corretto, BellSoft Liberica, SapMachine 和 Microsoft JDK. | 163   |\n| [TheRandomLabs/Scoop-Spotify ](https://github.com/TheRandomLabs/Scoop-Spotify)           | Spotify, Spicetify及其相关软件的仓库                                                                                                      | 156   |\n| [games ](https://github.com/Calinou/scoop-games)                                         | 开源和免费软件及其相关工具的仓库                                                                                               | 147   |\n| [kkzzhizhou/scoop-apps ](https://github.com/kkzzhizhou/scoop-apps)                       | 使用Github Action每天自动合并其他scoop仓库的更新，仓库地址：https://github.com/kkzzhizhou/scoop-apps                                                                                  | 146   |\n| [ivaquero/scoopet ](https://github.com/ivaquero/scoopet)                                 | 🚀 一个偏向学术研究的仓库.                                                                                                            | 134   |\n| [TheRandomLabs/scoop-nonportable ](https://github.com/TheRandomLabs/scoop-nonportable)   | 里面有一些非绿色版的软件                                                                                                                     | 130   |\n| [borger/scoop-galaxy-integrations ](https://github.com/borger/scoop-galaxy-integrations) | 游戏平台的仓库，比如Steam、Uplay、战网之类的，甚至还包含一些模拟器（3DS,Wii）以及最终幻想14（为什么只有这么一个游戏啊，我猜作者可能是个狒狒人）                                                                              | 131   |\n| [TheCjw/scoop-retools ](https://github.com/TheCjw/scoop-retools)                         | 逆向工程工具仓库                                                                                                                       | 115   |\n| [versions ](https://github.com/ScoopInstaller/Versions)                                  | 📦 包含了多个版本软件的仓库（Python2就可以在里面找到）.                                                                                                              | 106   |\n| [littleli/scoop-clojure ](https://github.com/littleli/scoop-clojure)                     | 在windows上安装clojure的仓库（查了下这好像是Java的方言？）                                                                                                                            | 73    |\n| [kidonng/sushi ](https://github.com/kidonng/sushi)                                       | [已停止维护] 🍣 “一个美味而包容的仓库”（原文就是这么写的……看了下也是个有各种类型软件的丰富仓库，但是可惜作者因为换了mac电脑而没有动力和条件继续维护了……）                                                                                                            | 72    |\n| [rasa/scoops ](https://github.com/rasa/scoops)                                           | 📦 “一个包含鲜美软件的Scoop味仓库”（同上……）.                                                                                                                        | 66    |\n| [Ash258/GenericBucket ](https://github.com/Ash258/GenericBucket)                         | 已废弃. 用 https://github.com/shovel-org/GenericBucket 替代                                                                                                     | 62    |\n| [kkzzhizhou/scoop-zapps ](https://github.com/kkzzhizhou/scoop-zapps)                     | 自用Scoop仓库，使用Github Action自动更新                                                                                                                                    | 49    |\n| [MCOfficer/scoop-nirsoft ](https://github.com/MCOfficer/scoop-nirsoft)                   | My 作者自己维护的一些便利小程序，有250多个.                                                                                                 | 45    |\n| [KNOXDEV/wsl ](https://github.com/KNOXDEV/wsl)                                           |  WSL（windows的Linux子系统）的仓库，就不需要windows商店了.                                                                               | 35    |\n| [cderv/r-bucket ](https://github.com/cderv/r-bucket)                                     | R语言相关的仓库                                                                                                  | 29    |\n| [tetradice/scoop-iyokan-jp ](https://github.com/tetradice/scoop-iyokan-jp)               | 日针对日语环境进行了优化的仓库                                                                                                                                         | 30    |\n| [TheRandomLabs/Scoop-Bucket ](https://github.com/TheRandomLabs/Scoop-Bucket)             | 一个个人仓库（其实自己维护一个仓库托管在github上很方便，有空做个教程）                                                                                                                                        | 26    |\n| [hoilc/scoop-lemon ](https://github.com/hoilc/scoop-lemon)                               | 🍋也是个个人仓库（居然贴心的提供了中国镜像）                                                                                                                   | 26    |\n| [Paxxs/Cluttered-bucket ](https://github.com/Paxxs/Cluttered-bucket)                     | 🍺一个（尽量) 绿色干净，带有惊喜的 scoop bucket 软件仓库（Windows 绿色软件收录/优秀软件/独立开发者）                                                                                                 | 26    |\n| [Qv2ray/mochi ](https://github.com/Qv2ray/mochi)                                         | 🍡Mochi: 中国用户的美味解决方案（为啥都喜欢用美味来形容啊……）                                                                                                                | 23    |\n| [php ](https://github.com/ScoopInstaller/PHP)                                            | 📦 PHP仓库                                                                                                                                          | 21    |\n| [zhoujin7/tomato ](https://github.com/zhoujin7/tomato)                                   | 一个个人仓库.                                                                                                                                        | 20    |\n| [ZvonimirSun/scoop-iszy ](https://github.com/ZvonimirSun/scoop-iszy)                     | 依然是个个人仓库                                                                                                                                     | 20    |\n| [wzv5/ScoopBucket ](https://github.com/wzv5/ScoopBucket)                                 | 又双叒叕是个个人仓库.                                                                                                                                              | 18\n\n**好了，接下来在你的软件海洋中遨游吧！再也不怕下到奇奇怪怪的东西了！**","source":"_posts/intr-scoop.md","raw":"---\ntitle: scoop，一条命令安装windows软件\ndate: 2022-07-28 08:48:22\ntags: [windows软件,实用工具]\ncover: https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e266d1ebdb744f88e852fa07355bc3c~tplv-k3u1fbpfcp-no-mark:480:480:0:0.awebp?\n---\n下载软件带了病毒？环境变量没配好？软件缺少相关依赖导致无法运行？那就试试scoop吧，一条命令搞定你所有问题！\n\n<!-- more -->\n\n- 你是否在为无法找到合适的软件资源苦恼着？（高速下载、\\*\\*之家，XX安装器）\n- 你是否在为环境变量的配置抓狂着？（JAVA_HOME，NGINX_HOME）\n- 你是否羡慕着linux，mac上一行命令直接安装软件？（apt-get,brew）\n- 你是否需要经常切换软件的版本？（JAVA8，JAVA11 Python2，Python3）\n- 你是否被某些软件的依赖搞到抓狂？（tomcat-JRE）\n\n那适合你的工具来了！\n那就是：<br>\n    \n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d3c8a474179462b849d99cef2448be3~tplv-k3u1fbpfcp-watermark.image?\"/></p>\n\n**<p align=center> Scoop </p>**\n\n想安装Python？一条：\n\n```\nscoop install python\n```\n想查找不同版本的JAVA安装？先搜索：\n\n```\nscoop search jdk\n```\n得到：\n\n```\n'java' bucket:\n    ...太多了不放出来了\n    openjdk (18.0.1.1-2)\n    openjdk10 (10.0.2-13)\n    openjdk11 (11.0.2-9)\n    openjdk12 (12.0.2-10)\n    openjdk13 (13.0.2-8)\n    openjdk14 (14.0.2-12)\n    openjdk15 (15.0.2-7)\n    openjdk16 (16.0.2-7)\n    openjdk17 (17.0.2-8)\n    openjdk18 (18.0.1.1-2)\n    openjdk19 (19-28-ea)\n    ...\n```\n选择JAVA18进行安装:\n\n```\nscoop install openjdk18\n```\n安装完成后直接运行，环境变量也帮你配好了：\n```\njava -version\n```\n```\njava version \"18.0.1.1\" 2022-04-22\nJava(TM) SE Runtime Environment (build 18.0.1.1+2-6)\nJava HotSpot(TM) 64-Bit Server VM (build 18.0.1.1+2-6, mixed mode, sharing)\n```\n\n那么，开始吧：\n# 系统要求\n- Windows 7 SP1+ / Windows Server 2008+\n- PowerShell 3（或更高版本）和 .NET Framework 4.5+\n- 启用PowerShell，并且`executionpolicy`可以设置成`remotesigned`(参考之后的步骤)\n\n确保已安装 PowerShell 3 或更高版本。 如果使用的是 Windows 10 或 Windows Server 2012 就可以直接用，但 Windows 7 和 Windows Server 2008 估计需要去升级PowerShell，powerShell的官方下载地址：\nhttps://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/install/installing-windows-powershell?view=powershell-7.2#upgrading-existing-windows-powershell\n\n可以使用以下命令检查powershell版本：\n```\n$psversiontable.psversion.major\n```\n如果返回的数字大于3，就再次输入这个命令（否则先通过上面的链接升级）：\n```\nset-executionpolicy remotesigned -scope currentuser\n```\n# 安装\n## 设置安装位置（可跳过）\nscoop默认是安装在`C:\\Users\\[你的账户名]\\scoop`下的，如果不想安装在这里，要首先指定安装目录（下面的例子安装在`D:\\Applications\\Scoop`）：\n\n```\n[environment]::setEnvironmentVariable('SCOOP', 'D:\\Applications\\Scoop', 'User')\n$env:SCOOP='D:\\Applications\\Scoop'\n```\n## 安装scoop\n继续在Powershell中输入：\n```\niex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n```\n等待命令执行完毕，就安装成功了\n## 设置全局软件安装位置（可跳过）\n软件安装时可以加入一个global参数，安装在全局位置，否则就会安装到用户目录下，这个全局安装位置默认在`C:\\GlobalScoopApps`下，可以通过如下命令进行修改（下面的例子中安装在`F:\\GlobalScoopApps`）:\n```\n[environment]::setEnvironmentVariable('SCOOP_GLOBAL','F:\\GlobalScoopApps','Machine')\n$env:SCOOP_GLOBAL='F:\\GlobalScoopApps'\n```\n# 使用Scoop\n## 常用命令\n输入`scoop help`可以查看所有scoop命令\n```\nalias       Manage scoop aliases\nbucket      Manage Scoop buckets\ncache       Show or clear the download cache\ncat         Show content of specified manifest. If available, `bat` will be used to pretty-print the JSON.\ncheckup     Check for potential problems\ncleanup     Cleanup apps by removing old versions\nconfig      Get or set configuration values\ncreate      Create a custom app manifest\ndepends     List dependencies for an app\ndownload    Download apps in the cache folder and verify hashes\nexport      Exports (an importable) list of installed apps\nhelp        Show help for a command\nhold        Hold an app to disable updates\nhome        Opens the app homepage\ninfo        Display information about an app\ninstall     Install apps\nlist        List installed apps\nprefix      Returns the path to the specified app\nreset       Reset an app to resolve conflicts\nsearch      Search available apps\nshim        Manipulate Scoop shims\nstatus      Show status and check for new app versions\nunhold      Unhold an app to enable updates\nuninstall   Uninstall an app\nupdate      Update apps, or Scoop itself\nvirustotal  Look for app’s hash or url on virustotal.com\nwhich       Locate a shim/executable (similar to ‘which’ on Linux)\n```\n其中比较常用的是：\n\n| 命令 | 描述 | 示例 |\n| --- | --- | --- |\n| install | 安装指定名称的软件 | scoop install tomcat |\n| uninstall | 卸载指定名称的软件 | scoop uninstall mongodb |\n| update | 更新指定名称的软件 | scoop update vscode |\n| search | 搜索包含指定名称的软件 | scoop search jdk |\n| list | 列出所有已经安装的软件 | scoop list |\n| reset | 将指定版本的软件添加到环境变量 | scoop reset oraclejdk|\n| bucket | 软件仓库管理(下文详谈） | scoop bucket add extra |\n\n所以最简单的安装方法就是`scoop intall`了，一个`scoop install vscode`，文本编辑器就安装好了！\n## 增加软件仓库\n输入`scoop bucket list`命令，可以看到类似这样的返回值：\n```powershell\nName   Source                                   Updated            Manifests\n----   ------                                   -------            ---------\nextras https://github.com/ScoopInstaller/Extras 2022/6/30 17:41:19      1580\njava   https://github.com/ScoopInstaller/Java   2022/6/30 17:50:23       224\nmain   https://github.com/ScoopInstaller/Main   2022/6/30 12:32:29      1053\n```\n如果你是第一次安装的话，这里应该只会显示一行`name`为`main`的数据，也就是说当前你只有一个默认仓库，有可能并没有收录你需要的软件，因此需要增加新的仓库。<br>\n一些官方默认仓库可以直接使用仓库名称，比如：\n```\nscoop bucket add extras #强烈推荐使用这个仓库，扩充了大量软件\n```\n而其他的第三方仓库则需要设定别名之后填写地址：\n```\nscoop bucket add dorado https://github.com/chawyehsu/dorado\n```\nscoop官网推荐了如下的软件仓库：\n仓库名 (30)                                                                              | 描述+我的吐槽                                                                                                                                                      | Star数 |\n| ---------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| [extras ](https://github.com/ScoopInstaller/Extras)                                      | 📦 Scoop官方的补充仓库.                                                                                                                                  | 1345  |\n| [main ](https://github.com/ScoopInstaller/Main)                                          | 📦 Scoop官方的默认仓库.                                                                                                                                 | 977   |\n| [chawyehsu/dorado ](https://github.com/chawyehsu/dorado)                                 | 🐟 也是另一个Scoop的补充仓库                                                                                                                           | 698   |\n| [nerd-fonts ](https://github.com/matthewjberger/scoop-nerd-fonts)                        |  nerd字体仓库                                                                                                                         | 225   |\n| [java ](https://github.com/ScoopInstaller/Java)                                          | 📦 Scoop的Java仓库，包括以下厂商的版本：Oracle Java, OpenJDK, Eclipse Temurin, IBM Semeru, Zulu, ojdkbuild, Amazon Corretto, BellSoft Liberica, SapMachine 和 Microsoft JDK. | 163   |\n| [TheRandomLabs/Scoop-Spotify ](https://github.com/TheRandomLabs/Scoop-Spotify)           | Spotify, Spicetify及其相关软件的仓库                                                                                                      | 156   |\n| [games ](https://github.com/Calinou/scoop-games)                                         | 开源和免费软件及其相关工具的仓库                                                                                               | 147   |\n| [kkzzhizhou/scoop-apps ](https://github.com/kkzzhizhou/scoop-apps)                       | 使用Github Action每天自动合并其他scoop仓库的更新，仓库地址：https://github.com/kkzzhizhou/scoop-apps                                                                                  | 146   |\n| [ivaquero/scoopet ](https://github.com/ivaquero/scoopet)                                 | 🚀 一个偏向学术研究的仓库.                                                                                                            | 134   |\n| [TheRandomLabs/scoop-nonportable ](https://github.com/TheRandomLabs/scoop-nonportable)   | 里面有一些非绿色版的软件                                                                                                                     | 130   |\n| [borger/scoop-galaxy-integrations ](https://github.com/borger/scoop-galaxy-integrations) | 游戏平台的仓库，比如Steam、Uplay、战网之类的，甚至还包含一些模拟器（3DS,Wii）以及最终幻想14（为什么只有这么一个游戏啊，我猜作者可能是个狒狒人）                                                                              | 131   |\n| [TheCjw/scoop-retools ](https://github.com/TheCjw/scoop-retools)                         | 逆向工程工具仓库                                                                                                                       | 115   |\n| [versions ](https://github.com/ScoopInstaller/Versions)                                  | 📦 包含了多个版本软件的仓库（Python2就可以在里面找到）.                                                                                                              | 106   |\n| [littleli/scoop-clojure ](https://github.com/littleli/scoop-clojure)                     | 在windows上安装clojure的仓库（查了下这好像是Java的方言？）                                                                                                                            | 73    |\n| [kidonng/sushi ](https://github.com/kidonng/sushi)                                       | [已停止维护] 🍣 “一个美味而包容的仓库”（原文就是这么写的……看了下也是个有各种类型软件的丰富仓库，但是可惜作者因为换了mac电脑而没有动力和条件继续维护了……）                                                                                                            | 72    |\n| [rasa/scoops ](https://github.com/rasa/scoops)                                           | 📦 “一个包含鲜美软件的Scoop味仓库”（同上……）.                                                                                                                        | 66    |\n| [Ash258/GenericBucket ](https://github.com/Ash258/GenericBucket)                         | 已废弃. 用 https://github.com/shovel-org/GenericBucket 替代                                                                                                     | 62    |\n| [kkzzhizhou/scoop-zapps ](https://github.com/kkzzhizhou/scoop-zapps)                     | 自用Scoop仓库，使用Github Action自动更新                                                                                                                                    | 49    |\n| [MCOfficer/scoop-nirsoft ](https://github.com/MCOfficer/scoop-nirsoft)                   | My 作者自己维护的一些便利小程序，有250多个.                                                                                                 | 45    |\n| [KNOXDEV/wsl ](https://github.com/KNOXDEV/wsl)                                           |  WSL（windows的Linux子系统）的仓库，就不需要windows商店了.                                                                               | 35    |\n| [cderv/r-bucket ](https://github.com/cderv/r-bucket)                                     | R语言相关的仓库                                                                                                  | 29    |\n| [tetradice/scoop-iyokan-jp ](https://github.com/tetradice/scoop-iyokan-jp)               | 日针对日语环境进行了优化的仓库                                                                                                                                         | 30    |\n| [TheRandomLabs/Scoop-Bucket ](https://github.com/TheRandomLabs/Scoop-Bucket)             | 一个个人仓库（其实自己维护一个仓库托管在github上很方便，有空做个教程）                                                                                                                                        | 26    |\n| [hoilc/scoop-lemon ](https://github.com/hoilc/scoop-lemon)                               | 🍋也是个个人仓库（居然贴心的提供了中国镜像）                                                                                                                   | 26    |\n| [Paxxs/Cluttered-bucket ](https://github.com/Paxxs/Cluttered-bucket)                     | 🍺一个（尽量) 绿色干净，带有惊喜的 scoop bucket 软件仓库（Windows 绿色软件收录/优秀软件/独立开发者）                                                                                                 | 26    |\n| [Qv2ray/mochi ](https://github.com/Qv2ray/mochi)                                         | 🍡Mochi: 中国用户的美味解决方案（为啥都喜欢用美味来形容啊……）                                                                                                                | 23    |\n| [php ](https://github.com/ScoopInstaller/PHP)                                            | 📦 PHP仓库                                                                                                                                          | 21    |\n| [zhoujin7/tomato ](https://github.com/zhoujin7/tomato)                                   | 一个个人仓库.                                                                                                                                        | 20    |\n| [ZvonimirSun/scoop-iszy ](https://github.com/ZvonimirSun/scoop-iszy)                     | 依然是个个人仓库                                                                                                                                     | 20    |\n| [wzv5/ScoopBucket ](https://github.com/wzv5/ScoopBucket)                                 | 又双叒叕是个个人仓库.                                                                                                                                              | 18\n\n**好了，接下来在你的软件海洋中遨游吧！再也不怕下到奇奇怪怪的东西了！**","slug":"intr-scoop","published":1,"updated":"2022-10-24T00:49:39.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9m3k9s7000cdcwf71mkerzz","content":"<p>下载软件带了病毒？环境变量没配好？软件缺少相关依赖导致无法运行？那就试试scoop吧，一条命令搞定你所有问题！</p>\n<span id=\"more\"></span>\n\n<ul>\n<li>你是否在为无法找到合适的软件资源苦恼着？（高速下载、**之家，XX安装器）</li>\n<li>你是否在为环境变量的配置抓狂着？（JAVA_HOME，NGINX_HOME）</li>\n<li>你是否羡慕着linux，mac上一行命令直接安装软件？（apt-get,brew）</li>\n<li>你是否需要经常切换软件的版本？（JAVA8，JAVA11 Python2，Python3）</li>\n<li>你是否被某些软件的依赖搞到抓狂？（tomcat-JRE）</li>\n</ul>\n<p>那适合你的工具来了！<br>那就是：<br></p>\n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d3c8a474179462b849d99cef2448be3~tplv-k3u1fbpfcp-watermark.image?\"/></p>\n\n<p><strong><p align=center> Scoop </p></strong></p>\n<p>想安装Python？一条：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install python</span><br></pre></td></tr></table></figure>\n<p>想查找不同版本的JAVA安装？先搜索：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop search jdk</span><br></pre></td></tr></table></figure>\n<p>得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;java&#x27; bucket:</span><br><span class=\"line\">    ...太多了不放出来了</span><br><span class=\"line\">    openjdk (18.0.1.1-2)</span><br><span class=\"line\">    openjdk10 (10.0.2-13)</span><br><span class=\"line\">    openjdk11 (11.0.2-9)</span><br><span class=\"line\">    openjdk12 (12.0.2-10)</span><br><span class=\"line\">    openjdk13 (13.0.2-8)</span><br><span class=\"line\">    openjdk14 (14.0.2-12)</span><br><span class=\"line\">    openjdk15 (15.0.2-7)</span><br><span class=\"line\">    openjdk16 (16.0.2-7)</span><br><span class=\"line\">    openjdk17 (17.0.2-8)</span><br><span class=\"line\">    openjdk18 (18.0.1.1-2)</span><br><span class=\"line\">    openjdk19 (19-28-ea)</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure>\n<p>选择JAVA18进行安装:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install openjdk18</span><br></pre></td></tr></table></figure>\n<p>安装完成后直接运行，环境变量也帮你配好了：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java version &quot;18.0.1.1&quot; 2022-04-22</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 18.0.1.1+2-6)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 18.0.1.1+2-6, mixed mode, sharing)</span><br></pre></td></tr></table></figure>\n\n<p>那么，开始吧：</p>\n<h1 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h1><ul>\n<li>Windows 7 SP1+ / Windows Server 2008+</li>\n<li>PowerShell 3（或更高版本）和 .NET Framework 4.5+</li>\n<li>启用PowerShell，并且<code>executionpolicy</code>可以设置成<code>remotesigned</code>(参考之后的步骤)</li>\n</ul>\n<p>确保已安装 PowerShell 3 或更高版本。 如果使用的是 Windows 10 或 Windows Server 2012 就可以直接用，但 Windows 7 和 Windows Server 2008 估计需要去升级PowerShell，powerShell的官方下载地址：<br><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/install/installing-windows-powershell?view=powershell-7.2#upgrading-existing-windows-powershell\">https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/install/installing-windows-powershell?view=powershell-7.2#upgrading-existing-windows-powershell</a></p>\n<p>可以使用以下命令检查powershell版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$psversiontable.psversion.major</span><br></pre></td></tr></table></figure>\n<p>如果返回的数字大于3，就再次输入这个命令（否则先通过上面的链接升级）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-executionpolicy remotesigned -scope currentuser</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"设置安装位置（可跳过）\"><a href=\"#设置安装位置（可跳过）\" class=\"headerlink\" title=\"设置安装位置（可跳过）\"></a>设置安装位置（可跳过）</h2><p>scoop默认是安装在<code>C:\\Users\\[你的账户名]\\scoop</code>下的，如果不想安装在这里，要首先指定安装目录（下面的例子安装在<code>D:\\Applications\\Scoop</code>）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[environment]::setEnvironmentVariable(&#x27;SCOOP&#x27;, &#x27;D:\\Applications\\Scoop&#x27;, &#x27;User&#x27;)</span><br><span class=\"line\">$env:SCOOP=&#x27;D:\\Applications\\Scoop&#x27;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装scoop\"><a href=\"#安装scoop\" class=\"headerlink\" title=\"安装scoop\"></a>安装scoop</h2><p>继续在Powershell中输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iex (new-object net.webclient).downloadstring(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure>\n<p>等待命令执行完毕，就安装成功了</p>\n<h2 id=\"设置全局软件安装位置（可跳过）\"><a href=\"#设置全局软件安装位置（可跳过）\" class=\"headerlink\" title=\"设置全局软件安装位置（可跳过）\"></a>设置全局软件安装位置（可跳过）</h2><p>软件安装时可以加入一个global参数，安装在全局位置，否则就会安装到用户目录下，这个全局安装位置默认在<code>C:\\GlobalScoopApps</code>下，可以通过如下命令进行修改（下面的例子中安装在<code>F:\\GlobalScoopApps</code>）:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[environment]::setEnvironmentVariable(&#x27;SCOOP_GLOBAL&#x27;,&#x27;F:\\GlobalScoopApps&#x27;,&#x27;Machine&#x27;)</span><br><span class=\"line\">$env:SCOOP_GLOBAL=&#x27;F:\\GlobalScoopApps&#x27;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用Scoop\"><a href=\"#使用Scoop\" class=\"headerlink\" title=\"使用Scoop\"></a>使用Scoop</h1><h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>输入<code>scoop help</code>可以查看所有scoop命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias       Manage scoop aliases</span><br><span class=\"line\">bucket      Manage Scoop buckets</span><br><span class=\"line\">cache       Show or clear the download cache</span><br><span class=\"line\">cat         Show content of specified manifest. If available, `bat` will be used to pretty-print the JSON.</span><br><span class=\"line\">checkup     Check for potential problems</span><br><span class=\"line\">cleanup     Cleanup apps by removing old versions</span><br><span class=\"line\">config      Get or set configuration values</span><br><span class=\"line\">create      Create a custom app manifest</span><br><span class=\"line\">depends     List dependencies for an app</span><br><span class=\"line\">download    Download apps in the cache folder and verify hashes</span><br><span class=\"line\">export      Exports (an importable) list of installed apps</span><br><span class=\"line\">help        Show help for a command</span><br><span class=\"line\">hold        Hold an app to disable updates</span><br><span class=\"line\">home        Opens the app homepage</span><br><span class=\"line\">info        Display information about an app</span><br><span class=\"line\">install     Install apps</span><br><span class=\"line\">list        List installed apps</span><br><span class=\"line\">prefix      Returns the path to the specified app</span><br><span class=\"line\">reset       Reset an app to resolve conflicts</span><br><span class=\"line\">search      Search available apps</span><br><span class=\"line\">shim        Manipulate Scoop shims</span><br><span class=\"line\">status      Show status and check for new app versions</span><br><span class=\"line\">unhold      Unhold an app to enable updates</span><br><span class=\"line\">uninstall   Uninstall an app</span><br><span class=\"line\">update      Update apps, or Scoop itself</span><br><span class=\"line\">virustotal  Look for app’s hash or url on virustotal.com</span><br><span class=\"line\">which       Locate a shim/executable (similar to ‘which’ on Linux)</span><br></pre></td></tr></table></figure>\n<p>其中比较常用的是：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>install</td>\n<td>安装指定名称的软件</td>\n<td>scoop install tomcat</td>\n</tr>\n<tr>\n<td>uninstall</td>\n<td>卸载指定名称的软件</td>\n<td>scoop uninstall mongodb</td>\n</tr>\n<tr>\n<td>update</td>\n<td>更新指定名称的软件</td>\n<td>scoop update vscode</td>\n</tr>\n<tr>\n<td>search</td>\n<td>搜索包含指定名称的软件</td>\n<td>scoop search jdk</td>\n</tr>\n<tr>\n<td>list</td>\n<td>列出所有已经安装的软件</td>\n<td>scoop list</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>将指定版本的软件添加到环境变量</td>\n<td>scoop reset oraclejdk</td>\n</tr>\n<tr>\n<td>bucket</td>\n<td>软件仓库管理(下文详谈）</td>\n<td>scoop bucket add extra</td>\n</tr>\n</tbody></table>\n<p>所以最简单的安装方法就是<code>scoop intall</code>了，一个<code>scoop install vscode</code>，文本编辑器就安装好了！</p>\n<h2 id=\"增加软件仓库\"><a href=\"#增加软件仓库\" class=\"headerlink\" title=\"增加软件仓库\"></a>增加软件仓库</h2><p>输入<code>scoop bucket list</code>命令，可以看到类似这样的返回值：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name   Source                                   Updated            Manifests</span><br><span class=\"line\"><span class=\"literal\">----</span>   <span class=\"literal\">------</span>                                   <span class=\"literal\">-------</span>            <span class=\"literal\">---------</span></span><br><span class=\"line\">extras https://github.com/ScoopInstaller/Extras <span class=\"number\">2022</span>/<span class=\"number\">6</span>/<span class=\"number\">30</span> <span class=\"number\">17</span>:<span class=\"number\">41</span>:<span class=\"number\">19</span>      <span class=\"number\">1580</span></span><br><span class=\"line\">java   https://github.com/ScoopInstaller/Java   <span class=\"number\">2022</span>/<span class=\"number\">6</span>/<span class=\"number\">30</span> <span class=\"number\">17</span>:<span class=\"number\">50</span>:<span class=\"number\">23</span>       <span class=\"number\">224</span></span><br><span class=\"line\">main   https://github.com/ScoopInstaller/Main   <span class=\"number\">2022</span>/<span class=\"number\">6</span>/<span class=\"number\">30</span> <span class=\"number\">12</span>:<span class=\"number\">32</span>:<span class=\"number\">29</span>      <span class=\"number\">1053</span></span><br></pre></td></tr></table></figure>\n<p>如果你是第一次安装的话，这里应该只会显示一行<code>name</code>为<code>main</code>的数据，也就是说当前你只有一个默认仓库，有可能并没有收录你需要的软件，因此需要增加新的仓库。<br><br>一些官方默认仓库可以直接使用仓库名称，比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add extras #强烈推荐使用这个仓库，扩充了大量软件</span><br></pre></td></tr></table></figure>\n<p>而其他的第三方仓库则需要设定别名之后填写地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add dorado https://github.com/chawyehsu/dorado</span><br></pre></td></tr></table></figure>\n<p>scoop官网推荐了如下的软件仓库：<br>仓库名 (30)                                                                              | 描述+我的吐槽                                                                                                                                                      | Star数 |<br>| —————————————————————————————- | —————————————————————————————————————————————————————- | —– |<br>| <a href=\"https://github.com/ScoopInstaller/Extras\">extras </a>                                      | 📦 Scoop官方的补充仓库.                                                                                                                                  | 1345  |<br>| <a href=\"https://github.com/ScoopInstaller/Main\">main </a>                                          | 📦 Scoop官方的默认仓库.                                                                                                                                 | 977   |<br>| <a href=\"https://github.com/chawyehsu/dorado\">chawyehsu/dorado </a>                                 | 🐟 也是另一个Scoop的补充仓库                                                                                                                           | 698   |<br>| <a href=\"https://github.com/matthewjberger/scoop-nerd-fonts\">nerd-fonts </a>                        |  nerd字体仓库                                                                                                                         | 225   |<br>| <a href=\"https://github.com/ScoopInstaller/Java\">java </a>                                          | 📦 Scoop的Java仓库，包括以下厂商的版本：Oracle Java, OpenJDK, Eclipse Temurin, IBM Semeru, Zulu, ojdkbuild, Amazon Corretto, BellSoft Liberica, SapMachine 和 Microsoft JDK. | 163   |<br>| <a href=\"https://github.com/TheRandomLabs/Scoop-Spotify\">TheRandomLabs/Scoop-Spotify </a>           | Spotify, Spicetify及其相关软件的仓库                                                                                                      | 156   |<br>| <a href=\"https://github.com/Calinou/scoop-games\">games </a>                                         | 开源和免费软件及其相关工具的仓库                                                                                               | 147   |<br>| <a href=\"https://github.com/kkzzhizhou/scoop-apps\">kkzzhizhou/scoop-apps </a>                       | 使用Github Action每天自动合并其他scoop仓库的更新，仓库地址：<a href=\"https://github.com/kkzzhizhou/scoop-apps\">https://github.com/kkzzhizhou/scoop-apps</a>                                                                                  | 146   |<br>| <a href=\"https://github.com/ivaquero/scoopet\">ivaquero/scoopet </a>                                 | 🚀 一个偏向学术研究的仓库.                                                                                                            | 134   |<br>| <a href=\"https://github.com/TheRandomLabs/scoop-nonportable\">TheRandomLabs/scoop-nonportable </a>   | 里面有一些非绿色版的软件                                                                                                                     | 130   |<br>| <a href=\"https://github.com/borger/scoop-galaxy-integrations\">borger/scoop-galaxy-integrations </a> | 游戏平台的仓库，比如Steam、Uplay、战网之类的，甚至还包含一些模拟器（3DS,Wii）以及最终幻想14（为什么只有这么一个游戏啊，我猜作者可能是个狒狒人）                                                                              | 131   |<br>| <a href=\"https://github.com/TheCjw/scoop-retools\">TheCjw/scoop-retools </a>                         | 逆向工程工具仓库                                                                                                                       | 115   |<br>| <a href=\"https://github.com/ScoopInstaller/Versions\">versions </a>                                  | 📦 包含了多个版本软件的仓库（Python2就可以在里面找到）.                                                                                                              | 106   |<br>| <a href=\"https://github.com/littleli/scoop-clojure\">littleli/scoop-clojure </a>                     | 在windows上安装clojure的仓库（查了下这好像是Java的方言？）                                                                                                                            | 73    |<br>| <a href=\"https://github.com/kidonng/sushi\">kidonng/sushi </a>                                       | [已停止维护] 🍣 “一个美味而包容的仓库”（原文就是这么写的……看了下也是个有各种类型软件的丰富仓库，但是可惜作者因为换了mac电脑而没有动力和条件继续维护了……）                                                                                                            | 72    |<br>| <a href=\"https://github.com/rasa/scoops\">rasa/scoops </a>                                           | 📦 “一个包含鲜美软件的Scoop味仓库”（同上……）.                                                                                                                        | 66    |<br>| <a href=\"https://github.com/Ash258/GenericBucket\">Ash258/GenericBucket </a>                         | 已废弃. 用 <a href=\"https://github.com/shovel-org/GenericBucket\">https://github.com/shovel-org/GenericBucket</a> 替代                                                                                                     | 62    |<br>| <a href=\"https://github.com/kkzzhizhou/scoop-zapps\">kkzzhizhou/scoop-zapps </a>                     | 自用Scoop仓库，使用Github Action自动更新                                                                                                                                    | 49    |<br>| <a href=\"https://github.com/MCOfficer/scoop-nirsoft\">MCOfficer/scoop-nirsoft </a>                   | My 作者自己维护的一些便利小程序，有250多个.                                                                                                 | 45    |<br>| <a href=\"https://github.com/KNOXDEV/wsl\">KNOXDEV/wsl </a>                                           |  WSL（windows的Linux子系统）的仓库，就不需要windows商店了.                                                                               | 35    |<br>| <a href=\"https://github.com/cderv/r-bucket\">cderv/r-bucket </a>                                     | R语言相关的仓库                                                                                                  | 29    |<br>| <a href=\"https://github.com/tetradice/scoop-iyokan-jp\">tetradice/scoop-iyokan-jp </a>               | 日针对日语环境进行了优化的仓库                                                                                                                                         | 30    |<br>| <a href=\"https://github.com/TheRandomLabs/Scoop-Bucket\">TheRandomLabs/Scoop-Bucket </a>             | 一个个人仓库（其实自己维护一个仓库托管在github上很方便，有空做个教程）                                                                                                                                        | 26    |<br>| <a href=\"https://github.com/hoilc/scoop-lemon\">hoilc/scoop-lemon </a>                               | 🍋也是个个人仓库（居然贴心的提供了中国镜像）                                                                                                                   | 26    |<br>| <a href=\"https://github.com/Paxxs/Cluttered-bucket\">Paxxs/Cluttered-bucket </a>                     | 🍺一个（尽量) 绿色干净，带有惊喜的 scoop bucket 软件仓库（Windows 绿色软件收录/优秀软件/独立开发者）                                                                                                 | 26    |<br>| <a href=\"https://github.com/Qv2ray/mochi\">Qv2ray/mochi </a>                                         | 🍡Mochi: 中国用户的美味解决方案（为啥都喜欢用美味来形容啊……）                                                                                                                | 23    |<br>| <a href=\"https://github.com/ScoopInstaller/PHP\">php </a>                                            | 📦 PHP仓库                                                                                                                                          | 21    |<br>| <a href=\"https://github.com/zhoujin7/tomato\">zhoujin7/tomato </a>                                   | 一个个人仓库.                                                                                                                                        | 20    |<br>| <a href=\"https://github.com/ZvonimirSun/scoop-iszy\">ZvonimirSun/scoop-iszy </a>                     | 依然是个个人仓库                                                                                                                                     | 20    |<br>| <a href=\"https://github.com/wzv5/ScoopBucket\">wzv5/ScoopBucket </a>                                 | 又双叒叕是个个人仓库.                                                                                                                                              | 18</p>\n<p><strong>好了，接下来在你的软件海洋中遨游吧！再也不怕下到奇奇怪怪的东西了！</strong></p>\n","site":{"data":{}},"excerpt":"<p>下载软件带了病毒？环境变量没配好？软件缺少相关依赖导致无法运行？那就试试scoop吧，一条命令搞定你所有问题！</p>","more":"<ul>\n<li>你是否在为无法找到合适的软件资源苦恼着？（高速下载、**之家，XX安装器）</li>\n<li>你是否在为环境变量的配置抓狂着？（JAVA_HOME，NGINX_HOME）</li>\n<li>你是否羡慕着linux，mac上一行命令直接安装软件？（apt-get,brew）</li>\n<li>你是否需要经常切换软件的版本？（JAVA8，JAVA11 Python2，Python3）</li>\n<li>你是否被某些软件的依赖搞到抓狂？（tomcat-JRE）</li>\n</ul>\n<p>那适合你的工具来了！<br>那就是：<br></p>\n<p align=center><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d3c8a474179462b849d99cef2448be3~tplv-k3u1fbpfcp-watermark.image?\"/></p>\n\n<p><strong><p align=center> Scoop </p></strong></p>\n<p>想安装Python？一条：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install python</span><br></pre></td></tr></table></figure>\n<p>想查找不同版本的JAVA安装？先搜索：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop search jdk</span><br></pre></td></tr></table></figure>\n<p>得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;java&#x27; bucket:</span><br><span class=\"line\">    ...太多了不放出来了</span><br><span class=\"line\">    openjdk (18.0.1.1-2)</span><br><span class=\"line\">    openjdk10 (10.0.2-13)</span><br><span class=\"line\">    openjdk11 (11.0.2-9)</span><br><span class=\"line\">    openjdk12 (12.0.2-10)</span><br><span class=\"line\">    openjdk13 (13.0.2-8)</span><br><span class=\"line\">    openjdk14 (14.0.2-12)</span><br><span class=\"line\">    openjdk15 (15.0.2-7)</span><br><span class=\"line\">    openjdk16 (16.0.2-7)</span><br><span class=\"line\">    openjdk17 (17.0.2-8)</span><br><span class=\"line\">    openjdk18 (18.0.1.1-2)</span><br><span class=\"line\">    openjdk19 (19-28-ea)</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure>\n<p>选择JAVA18进行安装:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install openjdk18</span><br></pre></td></tr></table></figure>\n<p>安装完成后直接运行，环境变量也帮你配好了：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java version &quot;18.0.1.1&quot; 2022-04-22</span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 18.0.1.1+2-6)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 18.0.1.1+2-6, mixed mode, sharing)</span><br></pre></td></tr></table></figure>\n\n<p>那么，开始吧：</p>\n<h1 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h1><ul>\n<li>Windows 7 SP1+ / Windows Server 2008+</li>\n<li>PowerShell 3（或更高版本）和 .NET Framework 4.5+</li>\n<li>启用PowerShell，并且<code>executionpolicy</code>可以设置成<code>remotesigned</code>(参考之后的步骤)</li>\n</ul>\n<p>确保已安装 PowerShell 3 或更高版本。 如果使用的是 Windows 10 或 Windows Server 2012 就可以直接用，但 Windows 7 和 Windows Server 2008 估计需要去升级PowerShell，powerShell的官方下载地址：<br><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/install/installing-windows-powershell?view=powershell-7.2#upgrading-existing-windows-powershell\">https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/install/installing-windows-powershell?view=powershell-7.2#upgrading-existing-windows-powershell</a></p>\n<p>可以使用以下命令检查powershell版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$psversiontable.psversion.major</span><br></pre></td></tr></table></figure>\n<p>如果返回的数字大于3，就再次输入这个命令（否则先通过上面的链接升级）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-executionpolicy remotesigned -scope currentuser</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"设置安装位置（可跳过）\"><a href=\"#设置安装位置（可跳过）\" class=\"headerlink\" title=\"设置安装位置（可跳过）\"></a>设置安装位置（可跳过）</h2><p>scoop默认是安装在<code>C:\\Users\\[你的账户名]\\scoop</code>下的，如果不想安装在这里，要首先指定安装目录（下面的例子安装在<code>D:\\Applications\\Scoop</code>）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[environment]::setEnvironmentVariable(&#x27;SCOOP&#x27;, &#x27;D:\\Applications\\Scoop&#x27;, &#x27;User&#x27;)</span><br><span class=\"line\">$env:SCOOP=&#x27;D:\\Applications\\Scoop&#x27;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装scoop\"><a href=\"#安装scoop\" class=\"headerlink\" title=\"安装scoop\"></a>安装scoop</h2><p>继续在Powershell中输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iex (new-object net.webclient).downloadstring(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure>\n<p>等待命令执行完毕，就安装成功了</p>\n<h2 id=\"设置全局软件安装位置（可跳过）\"><a href=\"#设置全局软件安装位置（可跳过）\" class=\"headerlink\" title=\"设置全局软件安装位置（可跳过）\"></a>设置全局软件安装位置（可跳过）</h2><p>软件安装时可以加入一个global参数，安装在全局位置，否则就会安装到用户目录下，这个全局安装位置默认在<code>C:\\GlobalScoopApps</code>下，可以通过如下命令进行修改（下面的例子中安装在<code>F:\\GlobalScoopApps</code>）:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[environment]::setEnvironmentVariable(&#x27;SCOOP_GLOBAL&#x27;,&#x27;F:\\GlobalScoopApps&#x27;,&#x27;Machine&#x27;)</span><br><span class=\"line\">$env:SCOOP_GLOBAL=&#x27;F:\\GlobalScoopApps&#x27;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用Scoop\"><a href=\"#使用Scoop\" class=\"headerlink\" title=\"使用Scoop\"></a>使用Scoop</h1><h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>输入<code>scoop help</code>可以查看所有scoop命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias       Manage scoop aliases</span><br><span class=\"line\">bucket      Manage Scoop buckets</span><br><span class=\"line\">cache       Show or clear the download cache</span><br><span class=\"line\">cat         Show content of specified manifest. If available, `bat` will be used to pretty-print the JSON.</span><br><span class=\"line\">checkup     Check for potential problems</span><br><span class=\"line\">cleanup     Cleanup apps by removing old versions</span><br><span class=\"line\">config      Get or set configuration values</span><br><span class=\"line\">create      Create a custom app manifest</span><br><span class=\"line\">depends     List dependencies for an app</span><br><span class=\"line\">download    Download apps in the cache folder and verify hashes</span><br><span class=\"line\">export      Exports (an importable) list of installed apps</span><br><span class=\"line\">help        Show help for a command</span><br><span class=\"line\">hold        Hold an app to disable updates</span><br><span class=\"line\">home        Opens the app homepage</span><br><span class=\"line\">info        Display information about an app</span><br><span class=\"line\">install     Install apps</span><br><span class=\"line\">list        List installed apps</span><br><span class=\"line\">prefix      Returns the path to the specified app</span><br><span class=\"line\">reset       Reset an app to resolve conflicts</span><br><span class=\"line\">search      Search available apps</span><br><span class=\"line\">shim        Manipulate Scoop shims</span><br><span class=\"line\">status      Show status and check for new app versions</span><br><span class=\"line\">unhold      Unhold an app to enable updates</span><br><span class=\"line\">uninstall   Uninstall an app</span><br><span class=\"line\">update      Update apps, or Scoop itself</span><br><span class=\"line\">virustotal  Look for app’s hash or url on virustotal.com</span><br><span class=\"line\">which       Locate a shim/executable (similar to ‘which’ on Linux)</span><br></pre></td></tr></table></figure>\n<p>其中比较常用的是：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>install</td>\n<td>安装指定名称的软件</td>\n<td>scoop install tomcat</td>\n</tr>\n<tr>\n<td>uninstall</td>\n<td>卸载指定名称的软件</td>\n<td>scoop uninstall mongodb</td>\n</tr>\n<tr>\n<td>update</td>\n<td>更新指定名称的软件</td>\n<td>scoop update vscode</td>\n</tr>\n<tr>\n<td>search</td>\n<td>搜索包含指定名称的软件</td>\n<td>scoop search jdk</td>\n</tr>\n<tr>\n<td>list</td>\n<td>列出所有已经安装的软件</td>\n<td>scoop list</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>将指定版本的软件添加到环境变量</td>\n<td>scoop reset oraclejdk</td>\n</tr>\n<tr>\n<td>bucket</td>\n<td>软件仓库管理(下文详谈）</td>\n<td>scoop bucket add extra</td>\n</tr>\n</tbody></table>\n<p>所以最简单的安装方法就是<code>scoop intall</code>了，一个<code>scoop install vscode</code>，文本编辑器就安装好了！</p>\n<h2 id=\"增加软件仓库\"><a href=\"#增加软件仓库\" class=\"headerlink\" title=\"增加软件仓库\"></a>增加软件仓库</h2><p>输入<code>scoop bucket list</code>命令，可以看到类似这样的返回值：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name   Source                                   Updated            Manifests</span><br><span class=\"line\"><span class=\"literal\">----</span>   <span class=\"literal\">------</span>                                   <span class=\"literal\">-------</span>            <span class=\"literal\">---------</span></span><br><span class=\"line\">extras https://github.com/ScoopInstaller/Extras <span class=\"number\">2022</span>/<span class=\"number\">6</span>/<span class=\"number\">30</span> <span class=\"number\">17</span>:<span class=\"number\">41</span>:<span class=\"number\">19</span>      <span class=\"number\">1580</span></span><br><span class=\"line\">java   https://github.com/ScoopInstaller/Java   <span class=\"number\">2022</span>/<span class=\"number\">6</span>/<span class=\"number\">30</span> <span class=\"number\">17</span>:<span class=\"number\">50</span>:<span class=\"number\">23</span>       <span class=\"number\">224</span></span><br><span class=\"line\">main   https://github.com/ScoopInstaller/Main   <span class=\"number\">2022</span>/<span class=\"number\">6</span>/<span class=\"number\">30</span> <span class=\"number\">12</span>:<span class=\"number\">32</span>:<span class=\"number\">29</span>      <span class=\"number\">1053</span></span><br></pre></td></tr></table></figure>\n<p>如果你是第一次安装的话，这里应该只会显示一行<code>name</code>为<code>main</code>的数据，也就是说当前你只有一个默认仓库，有可能并没有收录你需要的软件，因此需要增加新的仓库。<br><br>一些官方默认仓库可以直接使用仓库名称，比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add extras #强烈推荐使用这个仓库，扩充了大量软件</span><br></pre></td></tr></table></figure>\n<p>而其他的第三方仓库则需要设定别名之后填写地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add dorado https://github.com/chawyehsu/dorado</span><br></pre></td></tr></table></figure>\n<p>scoop官网推荐了如下的软件仓库：<br>仓库名 (30)                                                                              | 描述+我的吐槽                                                                                                                                                      | Star数 |<br>| —————————————————————————————- | —————————————————————————————————————————————————————- | —– |<br>| <a href=\"https://github.com/ScoopInstaller/Extras\">extras </a>                                      | 📦 Scoop官方的补充仓库.                                                                                                                                  | 1345  |<br>| <a href=\"https://github.com/ScoopInstaller/Main\">main </a>                                          | 📦 Scoop官方的默认仓库.                                                                                                                                 | 977   |<br>| <a href=\"https://github.com/chawyehsu/dorado\">chawyehsu/dorado </a>                                 | 🐟 也是另一个Scoop的补充仓库                                                                                                                           | 698   |<br>| <a href=\"https://github.com/matthewjberger/scoop-nerd-fonts\">nerd-fonts </a>                        |  nerd字体仓库                                                                                                                         | 225   |<br>| <a href=\"https://github.com/ScoopInstaller/Java\">java </a>                                          | 📦 Scoop的Java仓库，包括以下厂商的版本：Oracle Java, OpenJDK, Eclipse Temurin, IBM Semeru, Zulu, ojdkbuild, Amazon Corretto, BellSoft Liberica, SapMachine 和 Microsoft JDK. | 163   |<br>| <a href=\"https://github.com/TheRandomLabs/Scoop-Spotify\">TheRandomLabs/Scoop-Spotify </a>           | Spotify, Spicetify及其相关软件的仓库                                                                                                      | 156   |<br>| <a href=\"https://github.com/Calinou/scoop-games\">games </a>                                         | 开源和免费软件及其相关工具的仓库                                                                                               | 147   |<br>| <a href=\"https://github.com/kkzzhizhou/scoop-apps\">kkzzhizhou/scoop-apps </a>                       | 使用Github Action每天自动合并其他scoop仓库的更新，仓库地址：<a href=\"https://github.com/kkzzhizhou/scoop-apps\">https://github.com/kkzzhizhou/scoop-apps</a>                                                                                  | 146   |<br>| <a href=\"https://github.com/ivaquero/scoopet\">ivaquero/scoopet </a>                                 | 🚀 一个偏向学术研究的仓库.                                                                                                            | 134   |<br>| <a href=\"https://github.com/TheRandomLabs/scoop-nonportable\">TheRandomLabs/scoop-nonportable </a>   | 里面有一些非绿色版的软件                                                                                                                     | 130   |<br>| <a href=\"https://github.com/borger/scoop-galaxy-integrations\">borger/scoop-galaxy-integrations </a> | 游戏平台的仓库，比如Steam、Uplay、战网之类的，甚至还包含一些模拟器（3DS,Wii）以及最终幻想14（为什么只有这么一个游戏啊，我猜作者可能是个狒狒人）                                                                              | 131   |<br>| <a href=\"https://github.com/TheCjw/scoop-retools\">TheCjw/scoop-retools </a>                         | 逆向工程工具仓库                                                                                                                       | 115   |<br>| <a href=\"https://github.com/ScoopInstaller/Versions\">versions </a>                                  | 📦 包含了多个版本软件的仓库（Python2就可以在里面找到）.                                                                                                              | 106   |<br>| <a href=\"https://github.com/littleli/scoop-clojure\">littleli/scoop-clojure </a>                     | 在windows上安装clojure的仓库（查了下这好像是Java的方言？）                                                                                                                            | 73    |<br>| <a href=\"https://github.com/kidonng/sushi\">kidonng/sushi </a>                                       | [已停止维护] 🍣 “一个美味而包容的仓库”（原文就是这么写的……看了下也是个有各种类型软件的丰富仓库，但是可惜作者因为换了mac电脑而没有动力和条件继续维护了……）                                                                                                            | 72    |<br>| <a href=\"https://github.com/rasa/scoops\">rasa/scoops </a>                                           | 📦 “一个包含鲜美软件的Scoop味仓库”（同上……）.                                                                                                                        | 66    |<br>| <a href=\"https://github.com/Ash258/GenericBucket\">Ash258/GenericBucket </a>                         | 已废弃. 用 <a href=\"https://github.com/shovel-org/GenericBucket\">https://github.com/shovel-org/GenericBucket</a> 替代                                                                                                     | 62    |<br>| <a href=\"https://github.com/kkzzhizhou/scoop-zapps\">kkzzhizhou/scoop-zapps </a>                     | 自用Scoop仓库，使用Github Action自动更新                                                                                                                                    | 49    |<br>| <a href=\"https://github.com/MCOfficer/scoop-nirsoft\">MCOfficer/scoop-nirsoft </a>                   | My 作者自己维护的一些便利小程序，有250多个.                                                                                                 | 45    |<br>| <a href=\"https://github.com/KNOXDEV/wsl\">KNOXDEV/wsl </a>                                           |  WSL（windows的Linux子系统）的仓库，就不需要windows商店了.                                                                               | 35    |<br>| <a href=\"https://github.com/cderv/r-bucket\">cderv/r-bucket </a>                                     | R语言相关的仓库                                                                                                  | 29    |<br>| <a href=\"https://github.com/tetradice/scoop-iyokan-jp\">tetradice/scoop-iyokan-jp </a>               | 日针对日语环境进行了优化的仓库                                                                                                                                         | 30    |<br>| <a href=\"https://github.com/TheRandomLabs/Scoop-Bucket\">TheRandomLabs/Scoop-Bucket </a>             | 一个个人仓库（其实自己维护一个仓库托管在github上很方便，有空做个教程）                                                                                                                                        | 26    |<br>| <a href=\"https://github.com/hoilc/scoop-lemon\">hoilc/scoop-lemon </a>                               | 🍋也是个个人仓库（居然贴心的提供了中国镜像）                                                                                                                   | 26    |<br>| <a href=\"https://github.com/Paxxs/Cluttered-bucket\">Paxxs/Cluttered-bucket </a>                     | 🍺一个（尽量) 绿色干净，带有惊喜的 scoop bucket 软件仓库（Windows 绿色软件收录/优秀软件/独立开发者）                                                                                                 | 26    |<br>| <a href=\"https://github.com/Qv2ray/mochi\">Qv2ray/mochi </a>                                         | 🍡Mochi: 中国用户的美味解决方案（为啥都喜欢用美味来形容啊……）                                                                                                                | 23    |<br>| <a href=\"https://github.com/ScoopInstaller/PHP\">php </a>                                            | 📦 PHP仓库                                                                                                                                          | 21    |<br>| <a href=\"https://github.com/zhoujin7/tomato\">zhoujin7/tomato </a>                                   | 一个个人仓库.                                                                                                                                        | 20    |<br>| <a href=\"https://github.com/ZvonimirSun/scoop-iszy\">ZvonimirSun/scoop-iszy </a>                     | 依然是个个人仓库                                                                                                                                     | 20    |<br>| <a href=\"https://github.com/wzv5/ScoopBucket\">wzv5/ScoopBucket </a>                                 | 又双叒叕是个个人仓库.                                                                                                                                              | 18</p>\n<p><strong>好了，接下来在你的软件海洋中遨游吧！再也不怕下到奇奇怪怪的东西了！</strong></p>"},{"title":"解决人类最大难题——吃什么","date":"2022-08-11T00:38:17.000Z","cover":"2022/今天吃什么-93376e64471e/cover.jpg","_content":"每天都面临不知道吃什么的难题吗？让程序来帮你吧，输入你当前的位置，让程序来随机帮你选出附近的餐厅吧！\n\n<!-- more -->\n\n前几天上班摸鱼刷沸点，突然看到有个掘友提了一个问题：\n\n“每天最大的难题，就是：中午吃什么+晚上吃什么”\n\n我也有同感，虽然网上经常有随机生成吃什么的软件，或者一个简单的gif动图进行截图就可以完成随机，但是有极大的概率你所抽到的食物附近没有啊，总不能为了一顿烤鸭再开车去吃吧（当然如果是烤鸭我愿意……）\n\n那么，可不可以写一个这样的程序，输入你的地理位置，在附近找到所有餐饮的选项，再进行随机，这样的实用性就高得多了吧，说干就干！\n\n懒得看过程可以直接体验成品：[今天吃什么](<https://xiaoxideai.ren/todayMeal>)\n# 选择地图服务\n说起地图API，国内常用的应该就是百度和高德了，我本来想用百度，但是百度实名认证居然还要下载它的APP，于是我转而选择了高德，反正这么简单的功能谁都能做到，看了下API文档，选用webAPI就够了，仅需要两个功能：\n- [关键字搜索](https://lbs.amap.com/api/webservice/guide/api/search#text)用于搜索自己的地名以获取经纬\n- [周边搜索](https://lbs.amap.com/api/webservice/guide/api/search#around)用于搜索附近餐饮\n\n注册高德开发者，使用支付宝验证身份之后就可以使用了，创建应用，创建新的key，选择web服务：\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f8f40bd0dce463280569920cdda89b2~tplv-k3u1fbpfcp-watermark.image?)\n\n关键字搜索和周边搜索搜索就是我们需要的了。\n\n# 测试接口\n高德的webAPI就是传入你的accessKey调用一个接口即可，首先是关键字搜索：\n关键字搜索API服务地址：\n\n| URL  | https://restapi.amap.com/v3/place/text?parameters |\n| ---- | -------------------------------------------------- |\n| 请求方式 | GET |\n 参数| keywords-查询关键字 |\n\n使用postman测试：\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b7fcee8647248eca99d2c19ca79cdf5~tplv-k3u1fbpfcp-watermark.image?)\n成功搜索到经纬度（因为懒得做城市筛选，搜索关键词多写个城市吧）\n\n然后是周边搜索：\n| URL  | https://restapi.amap.com/v3/place/around?parameters |\n| ---- | -------------------------------------------------- |\n| 请求方式 | GET |\n 参数| location-经纬度、types-地点类型编码、radius-查找半径\n  \n其中地点类型编码需要下载高德官方的文档查看，餐饮大类是050000，但是大类里包含了咖啡厅蛋糕店之类的，所以我后来选择了050100|050200|050300 中餐厅|西餐厅|休闲餐厅三个小类，这个参数传入多个值时用|分隔，查找半径自己设置就好了单位是米\n\n使用postman测试：\n\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71c2a5bc7bd2412682d4342ab7d96c79~tplv-k3u1fbpfcp-watermark.image?)\n\n# 前端处理\n整个页面的操作流程是：\n- 输入自己地名搜索地点\n- 选择地点\n- 查找附近餐饮\n- 勾选需要随机的餐饮\n- 展示结果\n\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9352de179ec4f7da1ebb426aa849b88~tplv-k3u1fbpfcp-watermark.image?)\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6a803a5b0e7c445fb64dadefab8342a2~tplv-k3u1fbpfcp-watermark.image?)\n\n为了避免输入时频繁调用API（毕竟免费的限制次数），加了个防抖：\n```javascript\nexport default {\n    data() {\n        return {\n            //...\n            debounceTime: null, //输入框防抖\n            //...\n        }\n    },\n    watch: {\n      keywords: {\n        handler(val) {\n          clearTimeout(this.debounceTime)\n          this.debounceTime = setTimeout(() => {\n            if (val) {\n              axios.get(`https://restapi.amap.com/v3/place/text?key=${AMAP_AK}&keywords=${val}`).then(response => {\n                this.posList = response.data.pois;\n              })\n            }\n            else {\n              this.posList = [];\n            }\n          },800)\n        }\n      }\n    },\n}\n```\n选择地点之后，输入范围，点击查找出现附近餐饮：\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5678cf95fa44a269d687746ca4ac2aa~tplv-k3u1fbpfcp-watermark.image?)\n\n默认勾选所有新出现的结果：\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ceb679ef6584148bea82a6b2b66bd73~tplv-k3u1fbpfcp-watermark.image?)\n\n```javascript\nexport default {\n    data() {\n      return {\n          //..\n          keywords: \"\", // 地点搜索关键词\n          posList: [], // 地点列表\n          selectedPost: {}, // 已选择的地点\n          radius: 2000, // 搜索半径\n          mealList: [],\n          selectMealList: [], // 勾选的餐饮列表\n          result: \"\", // 最终选择的结果\n          page:1, //结果查找页码\n          hasMore: true\n       }\n    },\n    methods:{\n        searchNear() {\n            if (!this.selectedPost.name) {\n                Toast(\"请选择地点后进行搜索\")\n                return;\n            }\n            axios.get(`https://restapi.amap.com/v3/place/around?key=${AMAP_AK}&location=${this.selectedPost.location}&types=050100|050200|050300&radius=${this.radius || 2000}&offset=25&page=1`).then(response => {\n                this.mealList = response.data.pois;\n                this.selectMealList = this.mealList.map(item => item.name);//默认全部选中\n            })\n        },\n        moreMeal() {\n            this.page++\n            axios.get(`https://restapi.amap.com/v3/place/around?key=${AMAP_AK}&location=${this.selectedPost.location}&types=050100|050200|050300&radius=${this.radius || 2000}&offset=25&page=${this.page}`).then(response => {\n            let data = response.data.pois;\n            if (!data.length) {\n              this.hasMore = false;\n            }\n            this.mealList.push(...data);\n            this.selectMealList.push(...data.map(item => item.name))\n      })\n   }\n}\n```\n点击“我要吃啥！”按钮，使用`Math.random()`来取出一个餐厅：\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/177a2356e041470b8b0cb0cffda9b66b~tplv-k3u1fbpfcp-watermark.image?)\n```javascript\nrollMeal() {\n  this.result =\n    this.selectMealList[\n      Math.floor(Math.random() * this.selectMealList.length)\n    ];\n}\n```\n这个原理就是`Math.random()`返回的是在[0,1)的半开半闭区间的一个数字，乘以数组长度都后向下取整正好就是数组内所有的索引：\n[代码片段](https://code.juejin.cn/pen/7130492696245829665)\n# 使用\n直接访问我部署好的页面（但我的api调用次数有限每天用的多了可能就不能用了）：https://xiaoxideai.ren/todayMeal\n\n或者去https://github.com/zhzhch335/todayMeal 克隆项目，自己按照上面的步骤注册一个高德应用生成`accessKey`，然后去APP.vue文件里替换`AMAP_AK`常量为你自己的`accessKey`，之后运行下面命令即可:\n```\nnpm i\nnpm run serve\n```\n\n吃饺子去咯！","source":"_posts/今天吃什么.md","raw":"---\ntitle: 解决人类最大难题——吃什么\ndate: 2022-08-11 08:38:17\ntags: [前端,地图]\ncover: cover.jpg\n---\n每天都面临不知道吃什么的难题吗？让程序来帮你吧，输入你当前的位置，让程序来随机帮你选出附近的餐厅吧！\n\n<!-- more -->\n\n前几天上班摸鱼刷沸点，突然看到有个掘友提了一个问题：\n\n“每天最大的难题，就是：中午吃什么+晚上吃什么”\n\n我也有同感，虽然网上经常有随机生成吃什么的软件，或者一个简单的gif动图进行截图就可以完成随机，但是有极大的概率你所抽到的食物附近没有啊，总不能为了一顿烤鸭再开车去吃吧（当然如果是烤鸭我愿意……）\n\n那么，可不可以写一个这样的程序，输入你的地理位置，在附近找到所有餐饮的选项，再进行随机，这样的实用性就高得多了吧，说干就干！\n\n懒得看过程可以直接体验成品：[今天吃什么](<https://xiaoxideai.ren/todayMeal>)\n# 选择地图服务\n说起地图API，国内常用的应该就是百度和高德了，我本来想用百度，但是百度实名认证居然还要下载它的APP，于是我转而选择了高德，反正这么简单的功能谁都能做到，看了下API文档，选用webAPI就够了，仅需要两个功能：\n- [关键字搜索](https://lbs.amap.com/api/webservice/guide/api/search#text)用于搜索自己的地名以获取经纬\n- [周边搜索](https://lbs.amap.com/api/webservice/guide/api/search#around)用于搜索附近餐饮\n\n注册高德开发者，使用支付宝验证身份之后就可以使用了，创建应用，创建新的key，选择web服务：\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f8f40bd0dce463280569920cdda89b2~tplv-k3u1fbpfcp-watermark.image?)\n\n关键字搜索和周边搜索搜索就是我们需要的了。\n\n# 测试接口\n高德的webAPI就是传入你的accessKey调用一个接口即可，首先是关键字搜索：\n关键字搜索API服务地址：\n\n| URL  | https://restapi.amap.com/v3/place/text?parameters |\n| ---- | -------------------------------------------------- |\n| 请求方式 | GET |\n 参数| keywords-查询关键字 |\n\n使用postman测试：\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b7fcee8647248eca99d2c19ca79cdf5~tplv-k3u1fbpfcp-watermark.image?)\n成功搜索到经纬度（因为懒得做城市筛选，搜索关键词多写个城市吧）\n\n然后是周边搜索：\n| URL  | https://restapi.amap.com/v3/place/around?parameters |\n| ---- | -------------------------------------------------- |\n| 请求方式 | GET |\n 参数| location-经纬度、types-地点类型编码、radius-查找半径\n  \n其中地点类型编码需要下载高德官方的文档查看，餐饮大类是050000，但是大类里包含了咖啡厅蛋糕店之类的，所以我后来选择了050100|050200|050300 中餐厅|西餐厅|休闲餐厅三个小类，这个参数传入多个值时用|分隔，查找半径自己设置就好了单位是米\n\n使用postman测试：\n\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71c2a5bc7bd2412682d4342ab7d96c79~tplv-k3u1fbpfcp-watermark.image?)\n\n# 前端处理\n整个页面的操作流程是：\n- 输入自己地名搜索地点\n- 选择地点\n- 查找附近餐饮\n- 勾选需要随机的餐饮\n- 展示结果\n\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9352de179ec4f7da1ebb426aa849b88~tplv-k3u1fbpfcp-watermark.image?)\n\n![image.png](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6a803a5b0e7c445fb64dadefab8342a2~tplv-k3u1fbpfcp-watermark.image?)\n\n为了避免输入时频繁调用API（毕竟免费的限制次数），加了个防抖：\n```javascript\nexport default {\n    data() {\n        return {\n            //...\n            debounceTime: null, //输入框防抖\n            //...\n        }\n    },\n    watch: {\n      keywords: {\n        handler(val) {\n          clearTimeout(this.debounceTime)\n          this.debounceTime = setTimeout(() => {\n            if (val) {\n              axios.get(`https://restapi.amap.com/v3/place/text?key=${AMAP_AK}&keywords=${val}`).then(response => {\n                this.posList = response.data.pois;\n              })\n            }\n            else {\n              this.posList = [];\n            }\n          },800)\n        }\n      }\n    },\n}\n```\n选择地点之后，输入范围，点击查找出现附近餐饮：\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5678cf95fa44a269d687746ca4ac2aa~tplv-k3u1fbpfcp-watermark.image?)\n\n默认勾选所有新出现的结果：\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ceb679ef6584148bea82a6b2b66bd73~tplv-k3u1fbpfcp-watermark.image?)\n\n```javascript\nexport default {\n    data() {\n      return {\n          //..\n          keywords: \"\", // 地点搜索关键词\n          posList: [], // 地点列表\n          selectedPost: {}, // 已选择的地点\n          radius: 2000, // 搜索半径\n          mealList: [],\n          selectMealList: [], // 勾选的餐饮列表\n          result: \"\", // 最终选择的结果\n          page:1, //结果查找页码\n          hasMore: true\n       }\n    },\n    methods:{\n        searchNear() {\n            if (!this.selectedPost.name) {\n                Toast(\"请选择地点后进行搜索\")\n                return;\n            }\n            axios.get(`https://restapi.amap.com/v3/place/around?key=${AMAP_AK}&location=${this.selectedPost.location}&types=050100|050200|050300&radius=${this.radius || 2000}&offset=25&page=1`).then(response => {\n                this.mealList = response.data.pois;\n                this.selectMealList = this.mealList.map(item => item.name);//默认全部选中\n            })\n        },\n        moreMeal() {\n            this.page++\n            axios.get(`https://restapi.amap.com/v3/place/around?key=${AMAP_AK}&location=${this.selectedPost.location}&types=050100|050200|050300&radius=${this.radius || 2000}&offset=25&page=${this.page}`).then(response => {\n            let data = response.data.pois;\n            if (!data.length) {\n              this.hasMore = false;\n            }\n            this.mealList.push(...data);\n            this.selectMealList.push(...data.map(item => item.name))\n      })\n   }\n}\n```\n点击“我要吃啥！”按钮，使用`Math.random()`来取出一个餐厅：\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/177a2356e041470b8b0cb0cffda9b66b~tplv-k3u1fbpfcp-watermark.image?)\n```javascript\nrollMeal() {\n  this.result =\n    this.selectMealList[\n      Math.floor(Math.random() * this.selectMealList.length)\n    ];\n}\n```\n这个原理就是`Math.random()`返回的是在[0,1)的半开半闭区间的一个数字，乘以数组长度都后向下取整正好就是数组内所有的索引：\n[代码片段](https://code.juejin.cn/pen/7130492696245829665)\n# 使用\n直接访问我部署好的页面（但我的api调用次数有限每天用的多了可能就不能用了）：https://xiaoxideai.ren/todayMeal\n\n或者去https://github.com/zhzhch335/todayMeal 克隆项目，自己按照上面的步骤注册一个高德应用生成`accessKey`，然后去APP.vue文件里替换`AMAP_AK`常量为你自己的`accessKey`，之后运行下面命令即可:\n```\nnpm i\nnpm run serve\n```\n\n吃饺子去咯！","slug":"今天吃什么","published":1,"updated":"2022-10-24T00:41:46.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9m3k9s7000ddcwfcf7lgpjt","content":"<p>每天都面临不知道吃什么的难题吗？让程序来帮你吧，输入你当前的位置，让程序来随机帮你选出附近的餐厅吧！</p>\n<span id=\"more\"></span>\n\n<p>前几天上班摸鱼刷沸点，突然看到有个掘友提了一个问题：</p>\n<p>“每天最大的难题，就是：中午吃什么+晚上吃什么”</p>\n<p>我也有同感，虽然网上经常有随机生成吃什么的软件，或者一个简单的gif动图进行截图就可以完成随机，但是有极大的概率你所抽到的食物附近没有啊，总不能为了一顿烤鸭再开车去吃吧（当然如果是烤鸭我愿意……）</p>\n<p>那么，可不可以写一个这样的程序，输入你的地理位置，在附近找到所有餐饮的选项，再进行随机，这样的实用性就高得多了吧，说干就干！</p>\n<p>懒得看过程可以直接体验成品：<a href=\"https://xiaoxideai.ren/todayMeal\">今天吃什么</a></p>\n<h1 id=\"选择地图服务\"><a href=\"#选择地图服务\" class=\"headerlink\" title=\"选择地图服务\"></a>选择地图服务</h1><p>说起地图API，国内常用的应该就是百度和高德了，我本来想用百度，但是百度实名认证居然还要下载它的APP，于是我转而选择了高德，反正这么简单的功能谁都能做到，看了下API文档，选用webAPI就够了，仅需要两个功能：</p>\n<ul>\n<li><a href=\"https://lbs.amap.com/api/webservice/guide/api/search#text\">关键字搜索</a>用于搜索自己的地名以获取经纬</li>\n<li><a href=\"https://lbs.amap.com/api/webservice/guide/api/search#around\">周边搜索</a>用于搜索附近餐饮</li>\n</ul>\n<p>注册高德开发者，使用支付宝验证身份之后就可以使用了，创建应用，创建新的key，选择web服务：</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f8f40bd0dce463280569920cdda89b2~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>关键字搜索和周边搜索搜索就是我们需要的了。</p>\n<h1 id=\"测试接口\"><a href=\"#测试接口\" class=\"headerlink\" title=\"测试接口\"></a>测试接口</h1><p>高德的webAPI就是传入你的accessKey调用一个接口即可，首先是关键字搜索：<br>关键字搜索API服务地址：</p>\n<table>\n<thead>\n<tr>\n<th>URL</th>\n<th><a href=\"https://restapi.amap.com/v3/place/text?parameters\">https://restapi.amap.com/v3/place/text?parameters</a></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>请求方式</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>keywords-查询关键字</td>\n</tr>\n</tbody></table>\n<p>使用postman测试：</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b7fcee8647248eca99d2c19ca79cdf5~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"><br>成功搜索到经纬度（因为懒得做城市筛选，搜索关键词多写个城市吧）</p>\n<p>然后是周边搜索：<br>| URL  | <a href=\"https://restapi.amap.com/v3/place/around?parameters\">https://restapi.amap.com/v3/place/around?parameters</a> |<br>| —- | ————————————————– |<br>| 请求方式 | GET |<br> 参数| location-经纬度、types-地点类型编码、radius-查找半径</p>\n<p>其中地点类型编码需要下载高德官方的文档查看，餐饮大类是050000，但是大类里包含了咖啡厅蛋糕店之类的，所以我后来选择了050100|050200|050300 中餐厅|西餐厅|休闲餐厅三个小类，这个参数传入多个值时用|分隔，查找半径自己设置就好了单位是米</p>\n<p>使用postman测试：</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71c2a5bc7bd2412682d4342ab7d96c79~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h1 id=\"前端处理\"><a href=\"#前端处理\" class=\"headerlink\" title=\"前端处理\"></a>前端处理</h1><p>整个页面的操作流程是：</p>\n<ul>\n<li>输入自己地名搜索地点</li>\n<li>选择地点</li>\n<li>查找附近餐饮</li>\n<li>勾选需要随机的餐饮</li>\n<li>展示结果</li>\n</ul>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9352de179ec4f7da1ebb426aa849b88~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6a803a5b0e7c445fb64dadefab8342a2~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>为了避免输入时频繁调用API（毕竟免费的限制次数），加了个防抖：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//...</span></span><br><span class=\"line\">            <span class=\"attr\">debounceTime</span>: <span class=\"literal\">null</span>, <span class=\"comment\">//输入框防抖</span></span><br><span class=\"line\">            <span class=\"comment\">//...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">keywords</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">handler</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">clearTimeout</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">debounceTime</span>)</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">debounceTime</span> = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (val) &#123;</span><br><span class=\"line\">              axios.<span class=\"title function_\">get</span>(<span class=\"string\">`https://restapi.amap.com/v3/place/text?key=<span class=\"subst\">$&#123;AMAP_AK&#125;</span>&amp;keywords=<span class=\"subst\">$&#123;val&#125;</span>`</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">posList</span> = response.<span class=\"property\">data</span>.<span class=\"property\">pois</span>;</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">posList</span> = [];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,<span class=\"number\">800</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>选择地点之后，输入范围，点击查找出现附近餐饮：</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5678cf95fa44a269d687746ca4ac2aa~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>默认勾选所有新出现的结果：</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ceb679ef6584148bea82a6b2b66bd73~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">//..</span></span><br><span class=\"line\">          <span class=\"attr\">keywords</span>: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">// 地点搜索关键词</span></span><br><span class=\"line\">          <span class=\"attr\">posList</span>: [], <span class=\"comment\">// 地点列表</span></span><br><span class=\"line\">          <span class=\"attr\">selectedPost</span>: &#123;&#125;, <span class=\"comment\">// 已选择的地点</span></span><br><span class=\"line\">          <span class=\"attr\">radius</span>: <span class=\"number\">2000</span>, <span class=\"comment\">// 搜索半径</span></span><br><span class=\"line\">          <span class=\"attr\">mealList</span>: [],</span><br><span class=\"line\">          <span class=\"attr\">selectMealList</span>: [], <span class=\"comment\">// 勾选的餐饮列表</span></span><br><span class=\"line\">          <span class=\"attr\">result</span>: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">// 最终选择的结果</span></span><br><span class=\"line\">          <span class=\"attr\">page</span>:<span class=\"number\">1</span>, <span class=\"comment\">//结果查找页码</span></span><br><span class=\"line\">          <span class=\"attr\">hasMore</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">searchNear</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"property\">selectedPost</span>.<span class=\"property\">name</span>) &#123;</span><br><span class=\"line\">                <span class=\"title class_\">Toast</span>(<span class=\"string\">&quot;请选择地点后进行搜索&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            axios.<span class=\"title function_\">get</span>(<span class=\"string\">`https://restapi.amap.com/v3/place/around?key=<span class=\"subst\">$&#123;AMAP_AK&#125;</span>&amp;location=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.selectedPost.location&#125;</span>&amp;types=050100|050200|050300&amp;radius=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.radius || <span class=\"number\">2000</span>&#125;</span>&amp;offset=25&amp;page=1`</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">mealList</span> = response.<span class=\"property\">data</span>.<span class=\"property\">pois</span>;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">mealList</span>.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">name</span>);<span class=\"comment\">//默认全部选中</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">moreMeal</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>++</span><br><span class=\"line\">            axios.<span class=\"title function_\">get</span>(<span class=\"string\">`https://restapi.amap.com/v3/place/around?key=<span class=\"subst\">$&#123;AMAP_AK&#125;</span>&amp;location=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.selectedPost.location&#125;</span>&amp;types=050100|050200|050300&amp;radius=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.radius || <span class=\"number\">2000</span>&#125;</span>&amp;offset=25&amp;page=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.page&#125;</span>`</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> data = response.<span class=\"property\">data</span>.<span class=\"property\">pois</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!data.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">hasMore</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">mealList</span>.<span class=\"title function_\">push</span>(...data);</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span>.<span class=\"title function_\">push</span>(...data.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">name</span>))</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>点击“我要吃啥！”按钮，使用<code>Math.random()</code>来取出一个餐厅：</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/177a2356e041470b8b0cb0cffda9b66b~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">rollMeal</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">result</span> =</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span>[</span><br><span class=\"line\">      <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span>.<span class=\"property\">length</span>)</span><br><span class=\"line\">    ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个原理就是<code>Math.random()</code>返回的是在[0,1)的半开半闭区间的一个数字，乘以数组长度都后向下取整正好就是数组内所有的索引：<br><a href=\"https://code.juejin.cn/pen/7130492696245829665\">代码片段</a></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>直接访问我部署好的页面（但我的api调用次数有限每天用的多了可能就不能用了）：<a href=\"https://xiaoxideai.ren/todayMeal\">https://xiaoxideai.ren/todayMeal</a></p>\n<p>或者去<a href=\"https://github.com/zhzhch335/todayMeal\">https://github.com/zhzhch335/todayMeal</a> 克隆项目，自己按照上面的步骤注册一个高德应用生成<code>accessKey</code>，然后去APP.vue文件里替换<code>AMAP_AK</code>常量为你自己的<code>accessKey</code>，之后运行下面命令即可:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n\n<p>吃饺子去咯！</p>\n","site":{"data":{}},"excerpt":"<p>每天都面临不知道吃什么的难题吗？让程序来帮你吧，输入你当前的位置，让程序来随机帮你选出附近的餐厅吧！</p>","more":"<p>前几天上班摸鱼刷沸点，突然看到有个掘友提了一个问题：</p>\n<p>“每天最大的难题，就是：中午吃什么+晚上吃什么”</p>\n<p>我也有同感，虽然网上经常有随机生成吃什么的软件，或者一个简单的gif动图进行截图就可以完成随机，但是有极大的概率你所抽到的食物附近没有啊，总不能为了一顿烤鸭再开车去吃吧（当然如果是烤鸭我愿意……）</p>\n<p>那么，可不可以写一个这样的程序，输入你的地理位置，在附近找到所有餐饮的选项，再进行随机，这样的实用性就高得多了吧，说干就干！</p>\n<p>懒得看过程可以直接体验成品：<a href=\"https://xiaoxideai.ren/todayMeal\">今天吃什么</a></p>\n<h1 id=\"选择地图服务\"><a href=\"#选择地图服务\" class=\"headerlink\" title=\"选择地图服务\"></a>选择地图服务</h1><p>说起地图API，国内常用的应该就是百度和高德了，我本来想用百度，但是百度实名认证居然还要下载它的APP，于是我转而选择了高德，反正这么简单的功能谁都能做到，看了下API文档，选用webAPI就够了，仅需要两个功能：</p>\n<ul>\n<li><a href=\"https://lbs.amap.com/api/webservice/guide/api/search#text\">关键字搜索</a>用于搜索自己的地名以获取经纬</li>\n<li><a href=\"https://lbs.amap.com/api/webservice/guide/api/search#around\">周边搜索</a>用于搜索附近餐饮</li>\n</ul>\n<p>注册高德开发者，使用支付宝验证身份之后就可以使用了，创建应用，创建新的key，选择web服务：</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f8f40bd0dce463280569920cdda89b2~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>关键字搜索和周边搜索搜索就是我们需要的了。</p>\n<h1 id=\"测试接口\"><a href=\"#测试接口\" class=\"headerlink\" title=\"测试接口\"></a>测试接口</h1><p>高德的webAPI就是传入你的accessKey调用一个接口即可，首先是关键字搜索：<br>关键字搜索API服务地址：</p>\n<table>\n<thead>\n<tr>\n<th>URL</th>\n<th><a href=\"https://restapi.amap.com/v3/place/text?parameters\">https://restapi.amap.com/v3/place/text?parameters</a></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>请求方式</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>keywords-查询关键字</td>\n</tr>\n</tbody></table>\n<p>使用postman测试：</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b7fcee8647248eca99d2c19ca79cdf5~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"><br>成功搜索到经纬度（因为懒得做城市筛选，搜索关键词多写个城市吧）</p>\n<p>然后是周边搜索：<br>| URL  | <a href=\"https://restapi.amap.com/v3/place/around?parameters\">https://restapi.amap.com/v3/place/around?parameters</a> |<br>| —- | ————————————————– |<br>| 请求方式 | GET |<br> 参数| location-经纬度、types-地点类型编码、radius-查找半径</p>\n<p>其中地点类型编码需要下载高德官方的文档查看，餐饮大类是050000，但是大类里包含了咖啡厅蛋糕店之类的，所以我后来选择了050100|050200|050300 中餐厅|西餐厅|休闲餐厅三个小类，这个参数传入多个值时用|分隔，查找半径自己设置就好了单位是米</p>\n<p>使用postman测试：</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71c2a5bc7bd2412682d4342ab7d96c79~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h1 id=\"前端处理\"><a href=\"#前端处理\" class=\"headerlink\" title=\"前端处理\"></a>前端处理</h1><p>整个页面的操作流程是：</p>\n<ul>\n<li>输入自己地名搜索地点</li>\n<li>选择地点</li>\n<li>查找附近餐饮</li>\n<li>勾选需要随机的餐饮</li>\n<li>展示结果</li>\n</ul>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9352de179ec4f7da1ebb426aa849b88~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6a803a5b0e7c445fb64dadefab8342a2~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>为了避免输入时频繁调用API（毕竟免费的限制次数），加了个防抖：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//...</span></span><br><span class=\"line\">            <span class=\"attr\">debounceTime</span>: <span class=\"literal\">null</span>, <span class=\"comment\">//输入框防抖</span></span><br><span class=\"line\">            <span class=\"comment\">//...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">keywords</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">handler</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">clearTimeout</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">debounceTime</span>)</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">debounceTime</span> = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (val) &#123;</span><br><span class=\"line\">              axios.<span class=\"title function_\">get</span>(<span class=\"string\">`https://restapi.amap.com/v3/place/text?key=<span class=\"subst\">$&#123;AMAP_AK&#125;</span>&amp;keywords=<span class=\"subst\">$&#123;val&#125;</span>`</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">posList</span> = response.<span class=\"property\">data</span>.<span class=\"property\">pois</span>;</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">posList</span> = [];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,<span class=\"number\">800</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>选择地点之后，输入范围，点击查找出现附近餐饮：</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5678cf95fa44a269d687746ca4ac2aa~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>默认勾选所有新出现的结果：</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ceb679ef6584148bea82a6b2b66bd73~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">//..</span></span><br><span class=\"line\">          <span class=\"attr\">keywords</span>: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">// 地点搜索关键词</span></span><br><span class=\"line\">          <span class=\"attr\">posList</span>: [], <span class=\"comment\">// 地点列表</span></span><br><span class=\"line\">          <span class=\"attr\">selectedPost</span>: &#123;&#125;, <span class=\"comment\">// 已选择的地点</span></span><br><span class=\"line\">          <span class=\"attr\">radius</span>: <span class=\"number\">2000</span>, <span class=\"comment\">// 搜索半径</span></span><br><span class=\"line\">          <span class=\"attr\">mealList</span>: [],</span><br><span class=\"line\">          <span class=\"attr\">selectMealList</span>: [], <span class=\"comment\">// 勾选的餐饮列表</span></span><br><span class=\"line\">          <span class=\"attr\">result</span>: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">// 最终选择的结果</span></span><br><span class=\"line\">          <span class=\"attr\">page</span>:<span class=\"number\">1</span>, <span class=\"comment\">//结果查找页码</span></span><br><span class=\"line\">          <span class=\"attr\">hasMore</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">searchNear</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"property\">selectedPost</span>.<span class=\"property\">name</span>) &#123;</span><br><span class=\"line\">                <span class=\"title class_\">Toast</span>(<span class=\"string\">&quot;请选择地点后进行搜索&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            axios.<span class=\"title function_\">get</span>(<span class=\"string\">`https://restapi.amap.com/v3/place/around?key=<span class=\"subst\">$&#123;AMAP_AK&#125;</span>&amp;location=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.selectedPost.location&#125;</span>&amp;types=050100|050200|050300&amp;radius=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.radius || <span class=\"number\">2000</span>&#125;</span>&amp;offset=25&amp;page=1`</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">mealList</span> = response.<span class=\"property\">data</span>.<span class=\"property\">pois</span>;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">mealList</span>.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">name</span>);<span class=\"comment\">//默认全部选中</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">moreMeal</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">page</span>++</span><br><span class=\"line\">            axios.<span class=\"title function_\">get</span>(<span class=\"string\">`https://restapi.amap.com/v3/place/around?key=<span class=\"subst\">$&#123;AMAP_AK&#125;</span>&amp;location=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.selectedPost.location&#125;</span>&amp;types=050100|050200|050300&amp;radius=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.radius || <span class=\"number\">2000</span>&#125;</span>&amp;offset=25&amp;page=<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.page&#125;</span>`</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> data = response.<span class=\"property\">data</span>.<span class=\"property\">pois</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!data.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">this</span>.<span class=\"property\">hasMore</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">mealList</span>.<span class=\"title function_\">push</span>(...data);</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span>.<span class=\"title function_\">push</span>(...data.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">name</span>))</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>点击“我要吃啥！”按钮，使用<code>Math.random()</code>来取出一个餐厅：</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/177a2356e041470b8b0cb0cffda9b66b~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">rollMeal</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">result</span> =</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span>[</span><br><span class=\"line\">      <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"variable language_\">this</span>.<span class=\"property\">selectMealList</span>.<span class=\"property\">length</span>)</span><br><span class=\"line\">    ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个原理就是<code>Math.random()</code>返回的是在[0,1)的半开半闭区间的一个数字，乘以数组长度都后向下取整正好就是数组内所有的索引：<br><a href=\"https://code.juejin.cn/pen/7130492696245829665\">代码片段</a></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>直接访问我部署好的页面（但我的api调用次数有限每天用的多了可能就不能用了）：<a href=\"https://xiaoxideai.ren/todayMeal\">https://xiaoxideai.ren/todayMeal</a></p>\n<p>或者去<a href=\"https://github.com/zhzhch335/todayMeal\">https://github.com/zhzhch335/todayMeal</a> 克隆项目，自己按照上面的步骤注册一个高德应用生成<code>accessKey</code>，然后去APP.vue文件里替换<code>AMAP_AK</code>常量为你自己的<code>accessKey</code>，之后运行下面命令即可:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n\n<p>吃饺子去咯！</p>"}],"PostAsset":[{"_id":"source/_posts/今天吃什么/cover.jpg","post":"cl9m3k9s7000ddcwfcf7lgpjt","slug":"cover.jpg","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[{"post_id":"cl9m3k9rv0000dcwf91gb1jxa","tag_id":"cl9m3k9s20002dcwfaotkh2i3","_id":"cl9m3k9s50005dcwf3rui3w4z"},{"post_id":"cl9m3k9rv0000dcwf91gb1jxa","tag_id":"cl9m3k9s30003dcwf6l4r0aky","_id":"cl9m3k9s50006dcwfbnm1f0la"},{"post_id":"cl9m3k9s00001dcwf027hfu4h","tag_id":"cl9m3k9s20002dcwfaotkh2i3","_id":"cl9m3k9s60009dcwfc8974qh6"},{"post_id":"cl9m3k9s00001dcwf027hfu4h","tag_id":"cl9m3k9s50007dcwfhpc04met","_id":"cl9m3k9s6000adcwfgaenckub"},{"post_id":"cl9m3k9s00001dcwf027hfu4h","tag_id":"cl9m3k9s50008dcwfb9kyg4bp","_id":"cl9m3k9s6000bdcwfbpg15b67"},{"post_id":"cl9m3k9s7000cdcwf71mkerzz","tag_id":"cl9m3k9s8000edcwf60up6p3j","_id":"cl9m3k9s9000hdcwf60ts32sa"},{"post_id":"cl9m3k9s7000cdcwf71mkerzz","tag_id":"cl9m3k9s9000fdcwf7qjrguac","_id":"cl9m3k9s9000idcwffgvaauoq"},{"post_id":"cl9m3k9s7000ddcwfcf7lgpjt","tag_id":"cl9m3k9s20002dcwfaotkh2i3","_id":"cl9m3k9s9000jdcwf12706xhl"},{"post_id":"cl9m3k9s7000ddcwfcf7lgpjt","tag_id":"cl9m3k9s9000gdcwfb7p3aq9n","_id":"cl9m3k9s9000kdcwfgso7bz6q"}],"Tag":[{"name":"前端","_id":"cl9m3k9s20002dcwfaotkh2i3"},{"name":"CSS","_id":"cl9m3k9s30003dcwf6l4r0aky"},{"name":"后端","_id":"cl9m3k9s50007dcwfhpc04met"},{"name":"Nodejs","_id":"cl9m3k9s50008dcwfb9kyg4bp"},{"name":"windows软件","_id":"cl9m3k9s8000edcwf60up6p3j"},{"name":"实用工具","_id":"cl9m3k9s9000fdcwf7qjrguac"},{"name":"地图","_id":"cl9m3k9s9000gdcwfb7p3aq9n"}]}}